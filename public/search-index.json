[{"slug":"01-安吉黄昏","category":"blog","title":"安吉黄昏","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<br />\n<br />\n<br />\n\n<audio controls>\n       <source src=\"/audio/安吉黄昏.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\n<br />\n<br />\n<br />\n\n<small>封面图摄于安吉晚饭黄昏，伴随着一点凉风吹来，还挺有意境的。</small>\n\n**记录每周看到的前端潮流技术筛选后周一发布于此，关注让你更潮流~**\n\n### 好文\n\n- [当飞猪遇上 Serverless](https://mp.weixin.qq.com/s/e86uMiwCaVTLScEOs7yH4Q)\n- [如何设计一个前端插件系统](https://css-tricks.com/designing-a-javascript-plugin-system/)\n- [TypeScript 4.0 中令人最激动的地方](https://blog.bitsrc.io/typescript-4-0-what-im-most-excited-about-4ee89693e02e)\n- [用 CSS 来操纵图片](https://dev.to/ziizium/image-manipulation-with-css-11dd)\n- [新的跨域策略 COOP、COEP](https://mp.weixin.qq.com/s/vVX__t_LLUQ8Zp2kPOXKpg)\n- [李笑来写的微信互联网平民创业](https://github.com/xiaolai/everyones-guide-for-starting-up-on-wechat-network)\n\n### 工具\n\n- [Hoppscotch - PostMan 的漂亮前女友](https://github.com/hoppscotch/hoppscotch)\n- [Annie - 快速，简单和干净的视频下载工具](https://github.com/iawia002/annie)\n- [Storybook - 牛逼潮流的 UI 组件组织管理](https://storybook.js.org/)\n- [Rome - 号称要取代 Babel/Webpack 前端工具链](https://romefrontend.dev/)\n- [Smocker - 简单高效的 Mock 服务器](https://smocker.dev/)\n- [Previewed - 做出好看的苹果带壳截图](https://previewed.app/)\n\n### 框架\n\n- [web2vr - 用 Web 去写 VR](https://github.com/kikoano/web2vr)\n- [svelthree - 用 Svelte 来写 Threejs](https://svelthree.dev/)\n- [CindyJS - 用于创造数学交互式内容的框架](https://cindyjs.org/)\n- [ztext - 让文字具有 3D 效果](https://bennettfeely.com/ztext/)\n- [react-pdf - 渲染你的 PDF 文件](https://github.com/wojtekmaj/react-pdf)\n- [light-date - 157 bytes 的时间工具库](https://github.com/xxczaki/light-date)\n\n### 端技术\n\n- [深入探索 iOS 内存优化](https://juejin.im/post/6864492188404088846)\n- [Flutter -如何创建炫酷粒子时钟效果](https://juejin.im/post/6862158050237612039)\n- [探索 Flutter 中线程模型/消息循环的底层逻辑](https://mp.weixin.qq.com/s/yhni2q5XfxJ6qmfcJnSlBg)\n- [WKWebview 秒开的实践及踩坑之路](https://juejin.im/post/6861778055178747911)\n- [Apple Widget：下一个顶级流量入口](https://juejin.im/post/6860754533052579848)\n\n### 灵感\n\n- [用 CSS 来画一个小车车](https://codepen.io/shunyadezain/pen/MWypjVW)\n- [用 CSS 来画一个动物园](https://codepen.io/collection/AVVabV)\n- [数据工程师的“劝退”指南](https://github.com/datastacktv/data-engineer-roadmap)\n"},{"slug":"02-太子湾","category":"blog","title":"太子湾","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<br />\n<br />\n<br />\n\n<audio controls>\n       <source src=\"/audio/安吉黄昏.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\n<br />\n<br />\n<br />\n\n<img src=\"https://gw.alipayobjects.com/zos/k/yt/ck1Y1K.png\" width=\"400\" />\n\n<small>摄于杭州太子湾郁金香，挺美，每年 3 月底 4 月初开，明年你可以带着朋友去看看</small>\n\n> **记录看到的前端潮流技术，每周筛选后发布于此，关注让你更潮流~**\n\n### 好文和学习\n\n1. **[来！试试这个让你少加班的表单方案 FormRender](https://juejin.im/post/6871121209396822029)**：飞猪前端 1 年前开源的「通过 JSON Schema 快速生成自定义表单配置界面」的易用表单引擎，跟随作者一起来看怎么做一个体系化的表单解决方案以及背后的思考\n2. **[「一劳永逸」一张脑图带你掌握 Git 命令](https://juejin.im/post/6869519303864123399)**：基本上 Git 的操作以及原理看这个文章就够了\n3. **[Web Worker 文献综述](http://www.alloyteam.com/2020/07/14680/)**：alloyteam 出品的深度好文，带你了解 Web Worker 的方方面面，适合读 3 遍\n4. **[线程入门](http://www.alloyteam.com/2020/07/14657/)**：也是 alloyteam 的，结合 JS 将线程原理讲的也非常深入浅出\n5. **[iOS 键盘难题与可见视口( Visualviewport)API](http://www.alloyteam.com/2020/02/14265/)**：这个对于前端入门同学的终极难题终于有解了\n6. **[On finally learning to program at the age of 40](https://github.com/Dhghomon/programming_at_40/blob/master/README.md)**：在“我” 40 岁的时候终于学会了编程，看看这个外国朋友的心路历程\n\n### 设计和灵感\n\n1. **[TailwindInk](https://tailwind.ink/)**：一个人工智能调色板生成器，使用 Tailwindcss 颜色进行训练，不知道怎么选颜色时候可以用这个\n2. **[2020-2021 设计趋势 ISUX 报告·用户体验篇](https://isux.tencent.com/articles/ux-design-trend)**：本文通过研究近一两年科技、社会文化以及自身用户体验领域的变化，从用户体验领域关键的用户、媒介(设备与应用）、交互行为、信息与场景的五个角度出发，探索用户体验设计未来的趋势，希望能带来启发\n3. **[2020-2021 设计趋势 ISUX 报告·潮玩篇](https://isux.tencent.com/articles/art-toys-trend.html)**：看过以后觉得还是设计师潮流啊\n4. **[有哪些男人的快乐，是女人所无法体会的？](https://www.zhihu.com/question/411832116/answer/1388229740)**：相信我，一定需要点击进去，机械真的太太太舒服了！\n5. **[Reddit gets its app to 50 million Play Store downloads, mostly by making the mobile web experience miserable](https://www.androidpolice.com/2020/09/02/reddit-gets-its-app-to-50-million-play-store-downloads-mostly-by-making-the-mobile-web-experience-miserable/)**：Reddit 的 App 下载量达到 5000 万次，居然是通过让 H5 体验很挫达到的，想起了「某乎」这么玩很久了(hahaha)~\n6. **[将一个贪吃蛇游戏放到了二维码里面](https://itsmattkc.com/etc/snakeqr/)**：很是牛逼，可惜不是文章中提供的 windows 软件识别（可以试试这个[Install zbar on Mac OSX](http://macappstore.org/zbar/)），在线版本可见[snake-minified](https://itsmattkc.com/etc/snakeqr/snake-minified.html)\n\n### 开源和工具\n\n1. **[hoffstadt/DearPyGui](https://github.com/hoffstadt/DearPyGui)**：一个易用但强大的 Python GUI 框架，前端弄久了，可以看看人家 Python 是怎么画视图的，有一种惊喜感\n2. **[hediet/vscode-debug-visualizer](https://github.com/hediet/vscode-debug-visualizer)**：将你的 debugger 过程一步一步通过可视化方式显示出来的 VSCode Plugin，非常适合对一些逻辑运算的操作使用\n3. **[kangvcar/InfoSpider](https://github.com/kangvcar/InfoSpider)**：INFO-SPIDER 是一个集众多数据源于一身的爬虫工具箱，旨在安全快捷的帮助用户拿回自己的数据，工具代码开源，流程透明，并提供数据分析功能，基于用户数据生成图表文件，使得用户更直观、深入了解自己的信息\n4. **[oldboyxx/jira_clone](https://github.com/oldboyxx/jira_clone)**：用 React/Node 实现的 Jira clone 版本，如果你想做一个类似的看板或者进展追踪工具用它很合适\n5. **[kbrsh/moon](https://github.com/kbrsh/moon)**：号称最小和最快的函数式驱动的视图框架，居然只有 2KB\n\n### iOS 和多端\n\n1. **[探索现代的移动网络](https://mp.weixin.qq.com/s/ds6QkVrBwcurxp3RkvZe8Q)**：一个 iOS 工程师结合苹果将一些现代潮流的网络协议全部讲了一遍\n2. **[学 AR 到底学什么？我的 AR 之路反思与展望](https://juejin.im/post/6865650326390145031/)**：今年苹果发布会邀请的彩蛋就是用 AR 来搞的，说不定慢慢这东西会变成亮点东西，看看从客户端视角他们的了解，也可以通过[飞猪找一找，端侧 AI 的实践和展望](https://juejin.im/post/6844904152095539214) 这篇文章看看飞猪前端怎么结合 WebAR 以及 AI 来玩有趣的东西\n3. **[如何理解 iOS 的 Runtime？](https://juejin.im/post/6869670856705081358)**：比较难懂的一篇文章，不过可以结合这个文章去查询很多相关的东西\n4. **[当 Widget 遇到智能化](https://mp.weixin.qq.com/s/jcZ7xJdxdLeKZRSwurc6mQ)**：上周也推过一篇类似的文章，iOS14 测试版刚出来不久就忍不住升级了，Widget 很香，再结合这个可以触发这个东西可以怎么玩\n5. **[美团外卖 Flutter 动态化实践](https://tech.meituan.com/2020/06/23/meituan-flutter-flap.html)**：本文很有深度，从实现 Flutter 的方方面面讲了如何去做，很赞，可以给基建同学一个很好的输入\n"},{"slug":"03-万石植物园","category":"blog","title":"万石植物园","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<br />\n<br />\n<br />\n\n<audio controls>\n       <source src=\"/audio/安吉黄昏.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\n<br />\n<br />\n<br />\n<img src=\"https://gw.alipayobjects.com/zos/k/vt/QzwRSt.png\" width=\"800\" />\n\n<small>摄于万石植物园，到了厦门必去的景点，选择一个天气好的早上过去，在喷雾中拍拍照很不错</small>\n\n> **记录每周看到的前端潮流技术，筛选后发布于此，关注让你更潮流~**\n\n## 好文和学习\n\n- **[Vue v3.0.0 One Piece 终终终于发布了](https://github.com/vuejs/vue-next/releases/tag/v3.0.0)**：值得一看，居然也叫 One Piece，官方文档可见[Vue](https://v3.vuejs.org/)/[中文版 Vue](https://v3.cn.vuejs.org/)，升级过程兼容性可用[composition-api](https://github.com/vuejs/composition-api)或者[vueuse](https://github.com/antfu/vueuse)\n\n- **[用遗传算法与神经网络来玩马里奥(en)](https://chrispresso.io/AI_Learns_To_Play_SMB_Using_GA_And_NN)**：作者从为什么选择神经网络和遗传算法？一步一步介绍实现，一图剩多言，想折腾的同学可以跟着文章来跑一遍，代码可见 [Chrispresso/SuperMarioBros-AI](https://github.com/Chrispresso/SuperMarioBros-AI)\n  <img src=\"https://gw.alipayobjects.com/zos/k/fl/121.gif\" width=466/>\n\n- **[「划线高亮」和「插入笔记」—— 不止是前端知识点](https://zhuanlan.zhihu.com/p/225773857)**：前端除了 Serverless、低代码、微前端这些新又大的技术，前端还有一处很本质的地方就是用代码实现很厉害的交互视觉，假如让你做一个划线高亮的效果你打算如何做？\n\n- **[硬核看房利器——Web 全景的实现](https://mp.weixin.qq.com/s/MG2d0DAM_tYx78Tt-j0rvA)**：一步一步介绍什么是 VR、原理、场景、可以做啥、开发原理、如何在 CSS 3D 或者 ThreeJS 场景中实现，挺适合飞猪酒店看房的场景\n\n- **[浅析鸿蒙 JavaScript GUI 技术栈](https://juejin.im/post/6872154561574862855)**：最近开源的「鸿蒙 2.0」以 JavaScript 作为 IoT 应用开发的框架语言，通过此文可通俗地清楚它所支持的 GUI 到底是怎么一回事，不过看下来感觉还有些「玩具」，需要加油\n\n- **[注意力是你最稀缺的资源(en)](https://www.benkuhn.net/attention/)**：很多人应该也有这种感觉，洗澡的时候想一个事情解法效果很好(因为那时候除了洗澡你的注意力全部在这个事情上)，这篇文章在 Hacker News 比较火，文中有一处观点，对于工程师当你投入少于 10%注意力在工作上会有被解雇的风险，10-50%的注意力放工作能到让你达到预期，50%以上的注意力放工作会让你成为一个伟大的工程师\n\n- **[你的站点加载速度应该多快？(en)](https://medium.com/firebase-developers/how-fast-should-your-site-load-cfb14be48e8b)**：一般认为一个网站加载 2-5S 是正常的，但是很多时候远比纯单变量下的时间度量更复杂，比如测试太多是好网络，但是不好情况用户在户外网络不好情况，那怎么来更好度量呢？\n\n- **[如何使用 CSS 检测全屏模式](https://www.amitmerchant.com/how-to-detect-fullscreen-mode-using-css/)**：你可能不知道系列，直接使用 `@media all and (display-mode: fullscreen)` 媒体查询的方式还是很方便\n\n## 开源和工具\n\n- **[Nativefier-让网页编程 Mac App](https://github.com/jiahaog/nativefier/)**：之前有尝试多种工具让网页生成 Mac 软件，这款最好用，你可以将微信读书、微信等网页版做成一个 Mac App，使用很方便\n\n- **[TypeOrm](https://github.com/typeorm/typeorm)**：可用 TypeScript 和 ES6 写数据库的 ORM，支持 MySQL、PostgreSQL、MariaDB、SQLite、MS SQL Server、Oracle、SAP Hana、WebSQL 各种数据库，可以在 NodeJS、Browser、Ionic、Cordova 和 Electron 平台上工作\n\n- **[SkeletOnReact-快速生成动画骨架加载组件](https://skeletonreact.com/)**：通过骨架动画的方式代替常规的 Loading，可以给用户更好的体验，这个工具支持多个框架，推荐在业务开发中试试\n\n- **[Responsively App](https://github.com/responsively-org/responsively-app)**：一个用于测试响应式布局多屏幕场景的被修改过浏览器，可以从这个[文章](https://css-tricks.com/comparing-browsers-for-responsive-design/)查看更多类似工具\n\n- **[JSON Schema Store](https://www.schemastore.org/json/)**：收集了 291 种不同场景的 JSON Schema 协议，很适合做规范协议的同学参考\n\n- **[Jetbrains Mono 开源字体](https://www.jetbrains.com/lp/mono/)**：用了半年多的代码编辑器字体了，展示很舒服很是不错，推荐给大伙\n\n## iOS 和多端\n\n- **[iPhone 屏幕尺寸进化历程背后的 App 设计哲学](https://mp.weixin.qq.com/s/fRXCTfl_Ewt-XuOk0lSz9g)**：遥想 6 年前适配 iPhone 真的是很方便，等到了 2020 年 4.7 寸、5.5 寸、5.8 寸、6.1 寸、6.5 寸，加上 12 还要增加的 5.4 寸、6.7 寸，借此文从设计、开发到推广过程看考虑因素\n\n- **[iOS 性能优化 - Allocations 分析内存分配](https://mp.weixin.qq.com/s/WqVZ1rFpYrvE8X-J0f35mw)**：对于前端开发同学，常常被客户端同学说你这个页面内存有些大，但是怎么测试呢，可看此文\n\n- **[适用于 iOS 和 tvOS 的优雅过渡库-Hero](https://github.com/HeroTransitions/Hero)**：之前一直在找一款 iOS 和前端一样好用的的过渡动画库，找到啦\n\n- **[lldb 常用命令与调试技巧](https://juejin.im/post/6872764160640450574)**：LLDB 是个开源的内置于 XCode 的调试工具，它能帮助我们在开发中更快的定位和调试 bug，无论正向和逆向开发中都有很大的作用，对 iOS 开发感兴趣的需要学习\n\n## 设计和灵感\n\n- **[个人主页设计相关思考](https://mp.weixin.qq.com/s/UUcqZCZjfHMa7fsruCjq_w)**：作者深入分析了对于个人主页设计的思考，聊到通过产品设计手段帮助用户“树立人设”、“辅助吸粉”、“助力变现”，再扩展到用户和平台生态的关系\n\n- **[《画境长恨歌》叙事设计思路分享](https://mp.weixin.qq.com/s/-rh9Q-vEVWm9Z6HOktrluA)**：腾讯做游戏的功底真的是很佩服，如何从诗词到游戏策划实现\n\n- **[CodePen RolandMC-500.css](https://codepen.io/fossheim/pen/BaKQGZJ)**：用纯 CSS 画了一个 Roland MC-500，很精致\n\n- **[CodePen Home 3D Modern House - Pure CSS](https://codepen.io/ricardoolivaalonso/pen/yLOpNdZ)**：用 CSS 画一个 3D 的现代房子\n"},{"slug":"04-东海音乐节","category":"blog","title":"04 - 东海音乐节","description":"摄于去年东海音乐节，在海边听着摇滚吹着风挥着手，感觉超爽，喜欢音乐的潮流前端可以开拓一个追音乐节的习惯","tags":["javascript"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/t9/xOtN9c.jpg\" width=\"800\" />\n\n<small>摄于去年东海音乐节，在海边听着摇滚吹着风挥着手，感觉超爽，喜欢音乐的潮流前端可以开拓一个追音乐节的习惯</small>\n\n> **记录每周看到的前端潮流技术，筛选后发布于此，关注让你更潮流~**\n\n## 好文和学习\n\n- **[使用 CSS 对图片遮罩](https://web.dev/css-masking/)**：本文介绍了 CSS 的实验特性[`mask-image`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/mask-image)的使用，包括了如何实现图片遮罩、SVG 屏蔽、渐变遮罩的效果，还有一篇张鑫旭的[旧文](https://www.zhangxinxu.com/wordpress/2017/11/css-css3-mask-masks/)也可一读\n\n- **[一种新的图片格式 AVIF](https://jakearchibald.com/2020/avif-has-landed/)**：派生自[AV1 视频](https://www.cnblogs.com/qcloud1001/p/13209695.html)的关键帧，目前 chrome85 已经支持，Android 很快会被支持，对于可接受质量的图片，有个例子对比 WebP(43k)大小是 JPEG(74k)的一半，而 AVIF(18K)大小居然不到 WebP 的一半，文章从多个方面进行介绍，值得一读\n\n- **[双屏和折叠屏一些 Web API 介绍](https://blogs.windows.com/msedgedev/2020/09/14/introducing-dual-screen-foldable-web-apis/)**：微软 Edge 团队写的，介绍了两个 Chromium 实验特性，一个 CSS 媒体查询 screen-spanning 和一组环境变量来描述折叠屏的几何关系，一个 JS getWindowSegments 窗口枚举 API 用于检测非 DOM 场景\n\n- **[论某德阳神秘乱码](https://zhuanlan.zhihu.com/p/258567705)**：知乎专栏里面一篇很有趣的文章，德阳市发布的《致德阳市民的一封信》全部是整齐“乱码”文，很神奇的操作最后给转回去了，也可借此了解一下 [中文编码](https://zhuanlan.zhihu.com/p/46216008)\n\n- **[在 Canvas 里模拟物体碰撞](https://www.kffhi.com/blog/2020/08/22/Simulating-Object-Collisions-with-Canvas/)**： 从 0 到 1 学习 Canvas 能力，原文[可见](https://joshbradley.me/object-collisions-with-canvas/)，文章是讲如何在 canvas 里模拟物体碰撞，超级易上手带你一步一步来实现一群粒子碰撞的效果\n\n- **[机器学习基石课程笔记](https://juejin.im/post/6859697422605598734)**：本系列是台湾大学资讯工程系林軒田（Hsuan-Tien Lin）教授开设的《机器学习基石》课程的梳理，从机器[什么时候](https://juejin.im/post/6859697422605598734)、[为什么](https://juejin.im/post/6861235413085454349)、[怎么学习](https://juejin.im/post/6874914360964317198)、[怎么学习更好](https://juejin.im/post/6874908302514323469)4 个部分来讲述\n\n- **[中国大周期及其货币](https://finance.sina.com.cn/china/gncj/2020-09-21/doc-iivhvpwy8038347.shtml)**：桥水基金创始人达利欧的一篇最新长文，剖析了中国的历史更替脉络，以及中国人的思维方式、运作方式，并着重分析了从 1949 年到现在的中国崛起之路，可深入一读\n\n## 开源和工具\n\n- **[Github @vue/lit](https://github.com/yyx990803/vue-lit)**：借助[lit-html](https://lit-html.polymer-project.org/)和[@vue/reactivity](https://github.com/vuejs/vue-next/tree/master/packages/reactivity)的自定义元素，用 vue 的语法直接写 Web Component 的工具，解释文可见[尤大 3 天前发在 GitHub 上的 vue-lit 是啥？](https://juejin.im/post/6874383765070675976)\n\n- **[Github Brahmos](https://github.com/brahmosjs/brahmos)**：一个使用 React API 和原生模版来来写视图的 UI 库，使用 JSX 但是没有 VDOM，可以和尤大的[vue-lit](https://github.com/yyx990803/vue-lit)来对比一下，更多类似可见[Superfine](https://github.com/jorgebucaran/superfine)、[Hyperapp](https://github.com/jorgebucaran/hyperapp)\n\n- **[instant.page 实时预加载](https://instant.page/)**：一行代码提速你的网站转化，在用户单击页面之前预加载页面，一般人鼠标放到要点击的链接上，从真正点击下去有预计 100ms 的瞬间延迟，利用此时间差去预加载，有兴趣同学可以借助此思路在业务中二次创新一下\n\n- **[ARWES 科幻朋克 UI 框架](https://arwes.dev/)**：18 年的一个面向 Web 应用的未来科幻和网络朋克图形用户界面框架，连文档都是用 ARWES 自举的，动效和音效很有感觉\n\n- **[Github GrapesJS](https://github.com/artf/grapesjs)**：一个开源的 NoCode Web Builder 的搭建页面的框架，可见[Web 页面 Demo](https://grapesjs.com/demo.html)和[专题稿 Demo](https://grapesjs.com/demo-newsletter-editor.html)\n\n- **[Github Repluggable ](https://github.com/wix/repluggable)**：Repluggable 是一个为前端应用实现控制反转的库，可让复杂项目的开发变得更加容易。同时还在 React+Redux 应用中实现了微前端，并计划在未来使其独立于框架\n\n- **[filters.css - 滤镜样式库](https://bansal.io/filters-css#blur)**：可以实现超多中颜色滤镜的纯 CSS 样式库，对于图像招聘处理的同学很合适\n\n- **[Vime 播放器](https://vimejs.com/)**：一个可定制的、可扩展的、可访问的、与框架无关的播放器，看功能效果很不错\n\n- **[10 月 1 日之后，你新建的 GitHub 库默认分支不叫「master」了](https://www.jiqizhixin.com/articles/2020-09-21-10)**：这个决定并不是最近才做出的，6 月份国外「Black Lives Matter」抗议活动持续发酵，多个开源项目采取行动替换冒犯性的术语的一个结果\n\n## iOS 和多端\n\n- **[一位 iOS 开发者的进阶之旅](https://mp.weixin.qq.com/s/cKuVFRPUnnScLM3y26mgIQ)**：原文大部分内容来自[V2EX-iOS 开发有什么国人写的比较好的书籍推荐？](https://www.v2ex.com/t/701970)，看完这个很有触动，对于想学习 iOS 的前端同学可以参考\n\n- **[Podfile 的解析逻辑](https://mp.weixin.qq.com/s/f9YcS9eYS_RShLsTXS-SvA)**：iOS 开发里面的 Podfile 文件可以类比前端开发的 package.json，文章先从 Xcode 工程结构讲到 CocoaPods-Core，最后到精细化的 Podfile 配置，一篇文章带你了解 CocoaPods 的全部\n\n- **[Flutter 包大小治理上的探索与实践](https://mp.weixin.qq.com/s/adC-YUWd-xuUlzeAPHzJoQ)**：美团前端团队对 Flutter 的包大小问题进行了调研和实践，设计并实现了一套基于动态下发的包大小优化方案，本文深入介绍，对于弄 Flutter 可以一读\n\n## 设计和灵感\n\n- **[CodePen 100 divs - Dragon](https://codepen.io/cassie-codes/pen/GRZdoYX)**：一个用 100 个 div 加上 svg 实现的跟随鼠标移动的动，实现效果值得研究一番\n\n- **[Figma Config 又给我们带来了什么新特性？](https://mp.weixin.qq.com/s/-xcDU5Q0c0-AMj8NNcCgZQ)**：[Figma](https://www.figma.com/)传说是设计师中的 Github，今年大会主题是《让设计和代码连接更紧密》，此文为一些新特性预告讲解\n"},{"slug":"05-泸沽湖","category":"blog","title":"05 - 泸沽湖","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/bn/g7b1Xc.jpg\" width=\"800\" />\n\n<small>封面图摄于今年国庆在泸沽湖坐船到亲爱的客栈途中，第一次见如何清澈透蓝的湖水，到丽江一定需要抽空去一下泸沽湖看看</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注此专栏可以及时收到更新~**\n\n## 好文和学习\n\n**新潮流？用其他语言来写 JS 工具**  \n<https://2ality.com/2020/10/js-plus-other-languages.html>  \n最近发现不少比较快的 JS 周边工具都是用 Go 或者 Rust 来实现的，同时速度远快于之前用 Node 来实现，比如说比 Webpack 快百倍的 [esbuild](https://github.com/evanw/esbuild) 使用 Go 来实现的，或许是一种新的潮流\n\n**用 TensorFlow.js 来让蒙娜丽莎栩栩如生起来**  \n<https://blog.tensorflow.org/2020/09/bringing-mona-lisa-effect-to-life-tensorflow-js.html>  \n深度好文，这个项目利用 TensorFlow.js、深度学习和图像处理技术，让蒙娜丽莎的眼神和头跟踪实验者的动作来移动\n\n**只用 CSS 来实现设置数字计数器动画**  \n<https://css-tricks.com/animating-number-counters/>  \n要写一个数字从 0-100 增长的动画效果，可能首先会想到用 setInterval，但是其实你可以试试 New School 的 CSS 解决方案\n\n**去复习一遍 Linux 的知识**  \n<https://juejin.im/post/6881755746216706062>  \n标题是「对不起，学会这些 Linux 知识后，我有点飘」有些 2，不过用前端久了，去复习一下 Linux 用法是很不错的\n\n**改变世界的一次代码提交**  \n<https://hutusi.com/articles/the-greatest-git-commit>  \n本文主要是讲当时 Linus 是怎么设计出来 Git 的第一个版本来的，从背景、设计、实现、启示来阐述，对于了解 Git 原理很不错\n\n## 开源和工具\n\n**SWC- 超快 TS / JS 编译器**  \n<https://github.com/swc-project/swc>  \nSWC 是一个用 rust 编写的超快速 typescript/javascript 编译器，类似用 Rust 写的 JS 工具还有 [RSLint](https://github.com/RDambrosio016/RSLint)格式校验工具和[Volta](https://github.com/volta-cli/volta)项目命令行 node/npm/yarn 版本管理工具，还有用 Go 实现的[Elsa](https://github.com/elsaland/elsa)\n\n**jspm - 可直接使用的 NPM 包模块 CDN**  \n<https://jspm.org/>  \njspm 提供了一个模块 CDN，允许 npm 中的任何包作为原生 JavaScript 模块直接加载到浏览器或 Node 环境中使用，类似的还有[Skypack](https://docs.skypack.dev/)，可以和 Webpack5 中的模块联邦结合起来看\n\n**Jazzit - 让你的脚本运行成功失败播放声音**  \n<https://github.com/Sangarshanan/jazzit>  \nPython 的一个库，挺有新易，有兴趣的同学可以用 Node 去实现一个\n\n**Headless Recorder Chrome 扩展**  \n<https://github.com/checkly/headless-recorder>  \nHeadless recorder 是一个可以记录浏览器事件交互行为并生成 Puppeteer 或 Playwright 脚本的 Chrome 扩展工具，在测试领域可以好好玩一玩\n\n**Airbnb 开源的可视化组件 Visx**  \n<https://github.com/airbnb/visx>  \nVisx 是可复用的低代码可视化组件集，将 D3 的强大功能与 React 虚拟 DOM 更新的优势结合起来，很有 Airbnb 的视觉特色([效果>>](https://airbnb.io/visx/gallery))，做一些年轻化潮流的可视化场景可以试试\n\n**PASUKON-简单的 JAVASCRIPT 解析器生成器**  \n<https://pasukon.rocks/>  \nPasukon 使用易于学习的语法生成解析器，基于解析器组合器，还实现了词法分析步骤，可以通过如上在线页面来试试看\n\n## iOS 和多端\n\n**深入浅出主流的几款小程序跨端框架原理**  \n<https://juejin.im/post/6881597846307635214>  \n作者从目前市场上主流的小程序跨端框架，类 Vue、类 React 的原理分析了一个遍，长文非常适合一读\n\n**Flutter 渲染引擎详解 - iOS Metal 篇**  \n<https://zhuanlan.zhihu.com/p/214099612>  \nFlutter 渲染引擎在 iOS 上支持三种渲染方式，分别是纯软件（CPU），Metal 和 GL，此文主要讲在 iOS 上 Metal 的一个原理\n\n**Flutter Widget 体系架构与 UI 渲染流程**  \n<https://juejin.im/post/6874737011325059086>  \n本文为 Flutter 技术底层原理基础，了解后有便于对于其状态管理、Navigator 页面导航、Key 的设计原理、FPS 等领域扩充研究\n\n## 灵感和设计\n\n**硬核 UP 自制带屏幕的 NFC 名片**  \n<https://www.bilibili.com/video/BV1Cf4y1y7KT/>  \nB 站一 UP 开源了一个自己实现的超迷你智能 NFC 卡片，带电子墨水屏，可以模拟各种 IC 卡，和配套 APP 使用设置显示内容等等功能，非常佩服这个全能的人才\n\n**用 JS 来玩音乐**  \n<https://bongo.cat/>  \n试试按一下 1 1 3 1 6 5，然后按一下 1 1 3 1 8 6，会有惊喜，更多谱子可见[Externalizable/bongo.cat](https://github.com/Externalizable/bongo.cat/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22Type%3A+Song+Submission%22+)，很多“闲人”，玩完以后这个 JS 音乐生成库[ZzFXM](https://keithclark.co.uk/articles/zzfxm/)也可以了解一下~\n\n**Codepen-用 CSS 来画一个 Switch**  \n<https://codepen.io/cybercountess/pen/PoNXEqL>  \n可能你画就是一个 img 标签解决啦~\n\n**如何保持长时间专注？**  \n<https://www.yuque.com/deerain/wqpb2o/nwazye>  \n本文主要针对的是无法长时间保持注意力的人，普通人能一次性保持高度专注的时长一般是 30~40 分钟,如果低于这个时间，那就阔以看看此文啦~\n\n**为什么自己照镜子感觉自己长的蛮好看，可是一拍照就觉得不咋的?**  \n<https://www.zhihu.com/question/34368524>  \n知乎上面的一个问答，可能大部分同学都有这个疑问，为啥“我”镜子里面这么好看，拍照出来感觉差了点儿~\n"},{"slug":"06-白云滑雪场","category":"blog","title":"06 - 白云滑雪场","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/o3/ZebwPr.jpg\" width=\"800\" />\n\n<small>封面图摄于某年冬天新疆的白云滑雪场，从高处滑下来很是[刺激](https://gw.alipayobjects.com/os/k/nd/dsajdasdsad.mp4)，秋冬有很多平时见不到的非内陆美景，可以一去~</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注此专栏可以及时收到更新~**\n\n## 好文和学习\n\n**Webpack 5 终于发布啦**  \n<https://webpack.js.org/blog/2020-10-10-webpack-5-release/>  \n阔别两年，webpack 5 终于正式发布了，可通过此文来了解下重要更新有哪一些，以及其构建效率和质量是怎么去提升的，中文可见[详细内容>>](https://juejin.im/post/6882663278712094727)\n\n**ECMAScript 2020 新增特性**  \n<https://juejin.im/post/6883306672064987149>  \nECMAScript 2020 是 ECMAScript 语言规范的第 11 版，新增的这 9 个新特性值得一学\n\n**Serverless 未来十年发展解读**  \n<https://juejin.im/post/6883773727733972999>  \n本文整理自 Johann Schleier-Smith 在 [ServerlessDays China](https://cloud.tencent.com/developer/salon/live-1224/agenda-10025) 的演讲，主要分为四个部分：首先阐述 UC Berkeley 怎样来定义 Serverless ，之后会分享一些近期的研究成果和进展，最后提出对云计算未来的一些预测和设想\n\n**浏览器是如何工作的**  \n<https://king-hcj.github.io/2020/10/05/google-v8/>  \n一篇文章方方面面的介绍到了 Chrome V8，让你更懂 JavaScript 运行，很是详细\n\n**超全的 Linux Shell 文本处理工具集锦**  \n<https://segmentfault.com/a/1190000037480939>  \n每周学一点新知识，用过 Shell 处理一些文本才知道原来这么简单方便，此文将一些处理文本常见的工具都介绍了一个遍，可先了解到用的时候再查\n\n**一文了解文件上传全过程**  \n<https://segmentfault.com/a/1190000037411957>  \n一篇详细的介绍文件上传流程的文章，从前置知识、请求端、服务端、接收端一层一层来带着入学的感觉\n\n## 开源和工具\n\n**Zipson - Json 压缩工具**  \n<https://github.com/jgranstrom/zipson>  \nZipson 是一个让原本 `JSON.parse/stringify` 增加了压缩和流媒体支持的临时替代方案，感觉前后端传输中，接口先压缩吐出数据，前端通过解压获取 Json，可让传输数据变小 50%\n\n**Bubble Tea：一个强大轻量的 TUI 框架**  \n<https://github.com/charmbracelet/bubbletea>  \nBubble Tea 一个基于 Elm 架构的 Go 框架，借此可用有趣、函数式、带状态的方式去编写命令行 APP，效果很不错，虽然是 GO 语言，不过可触类旁通研究一波\n<img src=\"https://gw.alipayobjects.com/zos/k/1v/12123213123.gif\" width=\"800\" />\n\n**BlurHash: 图片懒加载舒服的占位符**  \n<https://github.com/woltapp/blurhash>  \n之前我们一般使用纯灰色亦或是骨架占位符的方式来缓存暂未出来的图片，虽然看起来没问题但是不讨设计喜欢，BlurHash 是将原有会会的占位图，变成模糊漂亮的彩色，可能设计会喜欢\n\n**Drogon：一个基于 C++14/17 的 Http 应用框架**  \n<https://github.com/an-tao/drogon>  \nDrogon 是一个基于 C++14/17 的 Http 应用框架，通可以方便的使用 C++构建各种类型的 Web 应用服务端程序，写习惯 Node 的同学看看这个会让你惊讶的\n\n**detect-gpu:一个 GPU 的检测库**  \n<https://github.com/TimvanScherpenzeel/detect-gpu>  \n根据 GPU 的 3D 渲染基准分数对 GPU 进行分类，开发人员可借此结果为图形密集型应用程序提供合理的默认设置\n\n**Plausible Analytics：Google Analytics 替代品**  \n<https://github.com/plausible/analytics>  \nPlausible Analytics 是一个简单、轻量且隐私友好的 Google Analytics 替代品，不使用 cookie，自托管或者云上部署都可以\n\n**Awesome YouTubers**  \n<https://github.com/JoseDeFreitas/awesome-youtubers>  \n以上这个 Awesome YouTubers 将技术领域值得关注的 YouTuber 给挑选出来了，适合那种看视频学习的同学来有选择关注~\n\n## iOS 和多端\n\n**1 分钟将 vscode 撸成小霸王**  \n<https://juejin.im/post/6882576431503638536>  \n这个是真的“浪”，借助[JSNES](https://github.com/bfirsh/jsnes)模拟器弄了一个 VSCode 的小霸王游戏机，VScode 插件搜索「小霸王」即可使用，这个想法很是不错~\n\n**iOS 后台锁屏监听摇一摇**  \n<https://juejin.im/post/6881420727371694093>  \n不会吧这也行系列，一般情况下出于省电、权限、合理性等因素考虑一些奇怪的需求 iOS 不是很好实现，如当 APP 处于后台或锁屏状态时，依旧可以监听到摇一摇，看看这里是怎么做的\n\n**Flutter 1.22 正式发布**  \n<https://juejin.im/post/6879048672597213198>  \n来看一看 Flutter 1.22 趁着 iOS 14/Android 11 发布季，都更新了一些什么样的功能？\n\n## 灵感和设计\n\n**哪些工具使你成为一个更好的程序员？**  \n<https://news.ycombinator.com/item?id=23468193>  \nHacker News 上面比较热烈的一个讨论，看看国外的程序员怎么说？\n\n**很炫酷的 3D 可视化的星空**  \n<http://stars.chromeexperiments.com/>  \n一个可交互式的三维可视化恒星邻居，包括超过 10 万颗附近的恒星，点击 URL 进入很是不错\n\n**Blush:插图定制生成工具**  \n<https://blush.design/zh-CN>  \n这个工具不错的是可以自定义插图的每一部分来创建自己的构图，同时种类也很多，对于前端同学写一些图文搭配 PPT 蛮适合\n\n**2020 中国奢侈品消费者数字行为洞察报告**  \n<https://mp.weixin.qq.com/s/fsBblPTiTjYXg1vUKzK_Jw>  \n从此文来了解下后疫情时代中国奢侈品消费市场呈现的趋势、消费链路以及品牌打法，还可结合“名媛拼团”侧面来剖析下\n\n**用纯 CSS 画了一个棕色美女**  \n<https://diana-adrianne.com/purecss-character/>  \n头发、眼睛、鼻子和皮肤阴影画的很逼真，可以打开开发者调试看里面 CSS 是怎么写的\n"},{"slug":"1024快乐","category":"blog","title":"1024快乐","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/bv/IMG_1115.jpg\" width=900/>\n\n<small>封面来源于周六径山花海的航拍图，风和日丽露营还是很舒服的。今天刚好是 1024 程序员节日，一直觉得日子过得还是需要有些仪式感才比较好，周末写了一个小彩蛋「[**祝你 1024 节日快乐**](https://tw93.netlify.app/)」，祝大家万事如意，以后写的代码都是你想写的代码。</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此专栏，方便获取更新通知**\n\n## 技术相关\n\n**The Future of the Web is on the Edge**  \n<https://deno.com/blog/the-future-of-web-is-on-the-edge>  \n这个概念不错，很酷。\n\n**2022 Web 年鉴 — JavaScript**  \n<https://mp.weixin.qq.com/s/cvdf4NPcOs25b2XHjoInrg>  \n一起来看看今年的 JavaScript 到底是什么样子。\n\n**A World-Class Code Playground with Sandpack**  \n<https://www.joshwcomeau.com/react/next-level-playground/>  \n看到标题第一感受是外国人怎么也喜欢吹牛逼，一看效果，还真不错，以后博客中可以嵌入代码运行了。  \n<img src=\"https://gw.alipayobjects.com/zos/k/0b/q8vquC.png\" width=\"800\" />\n\n## 潮流开源\n\n**helix：Vim 风格的后现代编辑器**  \n<https://github.com/helix-editor/helix>  \n使用 Rust 开发的，喜欢 Vim 的同学强烈推荐试试看。  \n<img src=\"https://gw.alipayobjects.com/zos/k/j1/3hQpSO.jpg\" width=\"800\">\n\n**Textual：Python 下的 Text User Interface**  \n<https://github.com/Textualize/textual>  \nTextual 是一个 Python 的框架，用于在命令行中创建交互型的 UI 效果，很潮流，注意截图其实是一个命令行窗口。  \n<img src=\"https://gw.alipayobjects.com/zos/k/6r/HxuZHn.jpg\" width=\"800\" />\n\n**rust-course：Rust 语言圣经**  \n<https://github.com/sunface/rust-course>  \n工作之余的第二语言来试试 Rust 吧，这个教程还不错。  \n<img src=\"https://gw.alipayobjects.com/zos/k/0s/T70eT4.jpg\" width=\"800\" />\n\n**wolfia：Turn your app into a link**  \n<https://www.wolfia.com/>  \n这个想法很神奇，别人都是将网页往 App 方向走，这个是你上传一个 APK，把你的应用放到虚拟机里面当做一个网页 URL 来使用。  \n<img src=\"https://gw.alipayobjects.com/zos/k/s7/FbHDI9.png\" width=\"800\" />\n\n**Gimli Tailwind：Chrome 调试 Tailwind 的扩展**  \n<https://chrome.google.com/webstore/detail/gimli-tailwind/fojckembkmaoehhmkiomebhkcengcljl>  \n<img src=\"https://gw.alipayobjects.com/zos/k/0h/vigGks.png\" width=\"800\" />\n\n## 随便看看\n\n**为什么现在越来越多的人不爱发朋友圈了？**  \n<https://www.zhihu.com/question/310673334>  \n我好像最近也是也是，更喜欢和程序员工程师同学交流了。\n\n**Web3 咖啡馆见闻：狂热、暴富、落寞，欲望永不打烊**  \n<https://www.huxiu.com/article/689609.html>  \n期待 Web3 能够像之前 14 年左右的互联网那样火起来，比想象中要有趣不少，文字最后一句很妙。\n\n**Apple Watch Ultra 一个月体验，不极限运动买它值吗？**  \n<https://www.huxiu.com/article/689181.html>  \n李大锤的一个视频，有一说一 Ultra 是真的漂亮。\n\n**五十岁咸鱼翻身转码上岸**  \n<https://www.1point3acres.com/bbs/thread-918311-1-1.html>  \n我的天！50 岁在职半年自学这么多概念，一个月 leetcode300+海投 500+这执行力真的绝了！\n\n**我换上了 Wi-Fi 6，它用起来怎么样？**  \n<https://sspai.com/post/76305>  \n好像我去年换上的就是 wifi6 千兆，一般 40m/s 的速度还是很爽的，而且没有想象中贵，但是带来的幸福感还是很足的。\n"},{"slug":"132-可爱雕塑","category":"blog","title":"132 - 可爱雕塑","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/o6/132.jpg\" width=\"800\" />\n\n<small>封面来源于上周末在一家居店拍到的一个超级大的可爱雕塑，不是太清楚叫什么，最近陆续在看一些家具，审美之间原来是很相通的，原本是任务的事情反而变得很好玩了。</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知**\n\n## 技术相关\n\n**内存分配如何工作**  \n<https://samwho.dev/memory-allocation/>  \n从基础知识讲起，然后用图解的方式来一步一步描述内存分配是如何工作的，浅显易懂，喜欢计算机的可以一读。\n\n**LangChain 官方文档**  \n<https://js.langchain.com/docs/>  \n这两天敲代码外的空余时间在看 LangChain 官方文档，之前看得比较散，这次系统看并敲代码学习，太有想象空间了，好比之前靠“口喷”来操作 ChatGPT，现在变成了一个「哆啦 A 梦的四次元口袋」，各种便捷好用的工具让你轻而易举，不管做不做都很建议一读。\n\n**中文 The Swift Programming Language**  \n<https://swiftgg.gitbook.io/swift/>  \n想学习 Swift 的同学可以看看 SwiftGG 这个中文版 Apple 官方 Swift 教程《The Swift Programming Language》，特别适合前端同学或者初学者阅读，找一个周末花一天时间可以熟悉一遍，挺好的。\n\n## 潮流工具\n\n**Loose Drawing：一个好用的插图下载网站**  \n<https://loosedrawing.com/>  \n周末写外部分享 Keynote 的时候想找插图，发现一个日本的「Loose Drawing」插图网站做得真不错，不需要注册没广告很舒服，有大量常用的插图，还可以更改主题色，支持 PNG/JPG/SVG 格式任意下载，有需要小伙伴可收藏备用。  \n<img src=\"https://gw.alipayobjects.com/zos/k/vz/TinySnap-2023-06-11-18.01.20.png\" width=\"800\" />\n\n**Scrnshts： App Store 软件上架产品图灵感**  \n<https://scrnshts.club/>  \n很适合独立开发同学上线前关于产品截图描述头疼问题，怎么做出又精致又符合产品调性的图片，可以去这里逛逛看，找找设计灵感。  \n<img src=\"https://gw.alipayobjects.com/zos/k/5i/TinySnap-2023-06-10-20.32.13.png\" width=\"800\" />\n\n**Flowise：Langchain 可视化编排工具**  \n<https://flowiseai.com/>  \n看到一个免费开源 UI 可视化工具「Flowise」，使用 LangchainJS 构建你定制的 LLM 流程，这个思路挺好的，直接 npm 一键安装，就可以跑起来，适合提供这种工具给到非技术同学使用。  \n<img src=\"https://gw.alipayobjects.com/zos/k/fs/MSGePS.png\" width=\"800\" />\n\n**Every Programmer Should Know**  \n<https://github.com/mtdvio/every-programmer-should-know>  \n看到一个 GitHub 持续更新的老仓库「Every Programmer Should Know 🤔」，将每个软件开发人员都应该知道的技术事项的集合进行了整理，包括计算机科学、算法数据结构、分布式、正则、安全、可用性、代码设计、工程哲学等，适合喜欢钻研的同学。  \n<img src=\"https://gw.alipayobjects.com/zos/k/46/TinySnap-2023-06-05-23.04.21.png\" width=\"800\" />\n\n## 随便看看\n\n**当代年轻人的“糊弄学”大赏**  \n<https://www.huxiu.com/article/1666217.html>  \n年轻人还是需要好好吃饭、好好睡觉、好好刷牙的。\n\n**一文看懂半导体产业链**  \n<https://mp.weixin.qq.com/s/RiFiCWXZ3WWlYBimxmLGBg>  \n比较详细的一个分析了，挺不错的。\n\n**如何看待苹果于 6 月 6 日发布的头显 APPLE Vision Pro，有哪些细节值得关注？**  \n<https://www.zhihu.com/question/604992904>  \n知乎的一个回答，很期待这个产品了。\n"},{"slug":"133-树上的鸟","category":"blog","title":"133 - 树上的鸟","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/sq/133.jpg\" width=\"800\" />\n\n<small>封面来源于上周随手拍的一个在树上叼着木条的鸟，叽叽喳喳，让原本静止的树有一点儿生机。</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知**\n\n## 技术相关\n\n**走向计算机视觉的通用人工智能：GPT 和大语言模型带来的启发**  \n<https://zhuanlan.zhihu.com/p/620631150>  \n这篇文章写得挺好的，来源于清华大学博士谢凌曦，作为 AGI 的下一个重要战场，CV 领域正在走向大一统模型，但是面临的困难还很大。\n\n**How to make a QR code with Stable Diffusion**  \n<https://stable-diffusion-art.com/qr-code/>  \n之前在看到有朋友分享「AI 艺术二维码」的方案，不过比较少有教你一步一步用 Stable Diffusion 来弄一个的，很简单使用，但是真有趣，想折腾的可以玩玩看。\n\n**Stack Overflow 2023 开发者调查报告**  \n<https://survey.stackoverflow.co/2023/>  \n今年的 Stack Overflow 2023 开发者调查报告做得挺好的，推荐工程师朋友们一读，这次还赶潮流融入了 Ai 相关的调查，以及可以看看当前世界上全职和独立开发者比例，国外开发者的工资啥的，挺有趣的。\n\n## 潮流工具\n\n**manypixels：矢量图插图下载网站**  \n<https://www.manypixels.co/gallery>  \n这个漂亮的插图网站「manypixels」功能比上次那个日本的我认为更加全面，款式更多了，一些深色背景的也比较合适使用，每一张图都做得很细腻精致。  \n<img src=\"https://cdn.fliggy.com/upic/8FwC9q.jpg\" width=\"800\" />\n\n**MessAuto： Mac 自动复制手机验证码工具**  \n<https://github.com/LeeeSe/MessAuto>  \n终于找到一款在 Mac 可以自动复制手机验证码工具「MessAuto」，不过设置的时候，需要在 iPhone 设置里面，找到信息设置里面有一个「短信转发」勾上 Mac，前提是有在 Mac Messages 登录一下就能用了，很方便，解了效率工具强迫症一个痛点。  \n<img src=\"https://cdn.fliggy.com/upic/0yE355.png\" width=\"800\" />\n\n**寻找电影对应色彩风格的网站**  \n<https://screenmusings.org/color/>  \n发现一个可以根据颜色类型来寻找电影对应色彩风格的网站，挺好玩的，还蛮有特色，喜欢电影的朋友可以去看看有没有自己喜欢的截图回忆回忆。  \n<img src=\"https://cdn.fliggy.com/upic/IOt2US.png\" width=\"800\" />\n\n**Flash 保存计划**  \n<https://flash.zczc.cz/>  \n看到一个「Flash 保存计划」，将小时候玩的网页游戏基本上都给收藏起来了，比如说黄金矿工、合金弹头、拳皇，点击进去就是当时那个感觉，怀旧爱好者可以用 PC 看看。  \n<img src=\"https://cdn.fliggy.com/upic/kFNQkY.jpg\" width=\"800\" />\n\n## 随便看看\n\n**家的日志：我的智能家居选择方案**  \n<https://sspai.com/post/80371>  \n少数派看到的一篇文章，刚好最近想去折腾家里的智能家居方案，当作参考，里面有聊到 Aqara，和苹果生态很吻合，不过就是有点儿小贵...\n\n**手机价格，为什么越来越高？**  \n<https://www.huxiu.com/article/1695225.html>  \n为什么呢？\n\n**新电影：闪电侠 The Flash**  \n<https://movie.douban.com/subject/3011317/>  \n周末看了一个电影《闪电侠》，超过预期，还挺好看的。\n"},{"slug":"134-Astro","category":"blog","title":"134 - Astro","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"/assets/introducing-astro.jpg\" width=\"800\" class=\"rounded-3xl\"/>\n\n<small>审美之间原来是很相通的，原本是任务的事情反而变得很好玩了。</small>\n\n<audio controls>\n       <source src=\"/audio/astroshipless2.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\nThere's a simple secret to building a faster website — _just ship less_.\n\nUnfortunately, modern web development has been trending in the opposite direction—towards _more._ More JavaScript, more features, more moving parts, and ultimately more complexity needed to keep it all running smoothly.\n\nToday I'm excited to publicly share Astro: a new kind of static site builder that delivers lightning-fast performance with a modern developer experience.\n\nTo design Astro, we borrowed the best parts of our favorite tools and then added a few innovations of our own, including:\n\n- **Bring Your Own Framework (BYOF):** Build your site using React, Svelte, Vue, Preact, web components, or just plain ol' HTML + JavaScript.\n- **100% Static HTML, No JS:** Astro renders your entire page to static HTML, removing all JavaScript from your final build by default.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"zh\" dir=\"ltr\">小人物的十年撸毛史（下）2017-2023<br>原本计划这篇写一下撸毛赛道的竞争现状与趋势分析的，毕竟这个才是干货，经历只能当个爽文看看，因为上一篇反馈还不错，想了下还是决定把17-23年写完。<br><br>1/n<br>一、17-19 年少得志后的至暗时刻… <a href=\"https://t.co/Ce8Yl6u1kr\">pic.twitter.com/Ce8Yl6u1kr</a></p>&mdash; 小人物 (@MetaHunter168) <a href=\"https://twitter.com/MetaHunter168/status/1671688313470861317?ref_src=twsrc%5Etfw\">June 22, 2023</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n"},{"slug":"Amazing test","category":"blog","title":"Amazing test","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<blockquote class=\"twitter-tweet\"><p lang=\"zh\" dir=\"ltr\">小人物的十年撸毛史（下）2017-2023<br>原本计划这篇写一下撸毛赛道的竞争现状与趋势分析的，毕竟这个才是干货，经历只能当个爽文看看，因为上一篇反馈还不错，想了下还是决定把17-23年写完。<br><br>1/n<br>一、17-19 年少得志后的至暗时刻… <a href=\"https://t.co/Ce8Yl6u1kr\">pic.twitter.com/Ce8Yl6u1kr</a></p>&mdash; 小人物 (@MetaHunter168) <a href=\"https://twitter.com/MetaHunter168/status/1671688313470861317?ref_src=twsrc%5Etfw\">June 22, 2023</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<iframe src=\"https://www.youtube.com/embed/0i5bioIYtYY\" class=\"w-full aspect-w-16\" style=\"height: 0; padding-bottom: 56.25%; overflow: hidden;\" allowfullscreen></iframe>\n\n<br />\n<br />\n<br />\n\n<iframe src=\"https://www.youtube.com/embed/VIDEO_ID\" class=\"w-full aspect-w-16 aspect-h-9\" style=\"height: 0; padding-bottom: 56.25%; overflow: hidden;\" allowfullscreen></iframe>\n\n<br />\n<br />\n<br />\n<iframe src=\"https://www.youtube.com/embed/0i5bioIYtYY?controls=1\"\" width=\"1280\" height=\"720\" allowfullscreen></iframe>\n<br />\n<br />\n<br />\n<iframe src=\"https://www.youtube.com/embed/0i5bioIYtYY?controls=1\" allowfullscreen></iframe>\n<br />\n<br />\n<br />\n<YouTube videoId=\"0i5bioIYtYY\" />\n\n<br />\n<br />\n<br />\n\n<YouTube id=\"xtTy5nKay_Y\" />\n\n<YouTube id=\"https://youtu.be/NkShQ1wwiCg\" />\n\n<YouTube\n  id=\"xtTy5nKay_Y\"\n  poster=\"https://images-assets.nasa.gov/image/0302063/0302063~orig.jpg\"\n/>\n\n%[https://www.youtube.com/watch?v=0i5bioIYtYY]\n\n[https://www.youtube.com/watch?v=0i5bioIYtYY]\n\nhttps://www.youtube.com/watch?v=0i5bioIYtYY\n\n[Watch the YouTube video](https://www.youtube.com/watch?v=0i5bioIYtYY)\n\n<video src=\"https://www.youtube.com/embed/0i5bioIYtYY\"></video>\n\n<br />\n<br />\n<br />\n\n<video src=\"/audio/test.mp4\" controls></video>\n\n<audio controls>\n       <source src=\"/audio/amazing test.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\n<br />\n<br />\n<br />\n\n<audio src=\"/audio/amazing test.mp3\"  controls></audio>\n\n<br />\n<br />\n<br />\n<video width=\"1280\" height=\"720\" controls>\n  <source src=\"/audio/test.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>\n\n<br />\n<br />\n<br />\n<video width=\"320\" height=\"240\" controls>\n  <source src=\"https://www.youtube.com/watch?v=0i5bioIYtYY\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>\n\n<br />\n<br />\n<br />\n\n在这个 AI 时代，越来越多的工具将人工智能融入到其平台中，为我们提供了无限的可能性。让我们一起探索一些令人振奋的工具，它们可以帮助我们完成各种任务，从设计和内容创作到项目管理和数据分析。这些工具充满了 AI 的魔力，为我们节省了时间和精力，让我们可以专注于更重要的事情。\n\n1. Canva\n\n以前，我用 Canva 完成了一系列的任务，如创建社交媒体帖子、发票、简历、网站、演示文稿、视频、徽标等等。然而，随着 AI 技术的出现，Canva 通过将几个 AI 功能集成到其平台上，取得了重大进步。\n\n让我分享一些 Canva 提供的显著 AI 特性：\n\n- Canva Doc 中的魔法写作：这个特性使用户能够轻松生成书面内容。它能够快速简单地帮助组织各种目的的文本。\n\n- 魔法设计：通过这个功能，用户可以亲眼目睹 AI 的魔力。只需提供一个提示或想法，Canva 的 AI 算法就能为你生成令人眼花缭乱的设计，让你无需大费周章地创造视觉吸引力的设计。\n\n- 魔法橡皮擦：厌倦了图片上的多余元素吗？这个 AI 功能就在这里帮助你。只需点击几下，你就能神奇地从你的图像中删除任何不需要的元素，确保图像干净整洁。\n\n- 魔法编辑：需要在你的设计中添加或修改元素吗？这个功能让你能够轻松实现。无论你是想添加新的元素，还是调整现有的元素，Canva 的 AI 功能都能简化这个过程。\n\n这只是 Canva 提供的 AI 功能的一部分例子。通过利用这些尖端技术，我能在几分钟内完成设计工作，节省了时间和精力。\n\n2. ChatGPT\n\n作为一个独立创业者，我每天都有很多任务要处理。最近，我甚至接受了学习如何市场化产品和吸引投资者的挑战。上周，我完全自己创建了一个投资者介绍。这就是 ChatGPT 派上用场的地方。\n\n我用 ChatGPT 最有效的提示之一是：“我希望你扮演一个有着几十年[职业名称]经验的世界级专家。我会向你要求输出，你必须给我独特的、专业写作的作品。”\n\n通过使用这个提示，ChatGPT 扮演了一个有经验的导师的角色，随时为我提供任何我询问的主题的有价值的见解。\n\n例如，当我使用这个提示时，我会得到超出我预期的优秀回答。你可以根据你的专业定制提示，并询问 ChatGPT 任何你想知道的事情。\n\nChatGPT 真的就像我可以随时寻求指导和专业知识的专家顾问，成为了我日常生活中的一个宝贵工具。\n\n<video class=\"w-full h-auto max-w-full border border-gray-200 rounded-lg dark:border-gray-700\" controls>\n  <source href=\"https://www.youtube.com/watch?v=N6Q66aTJeH4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n# 记录 3 年半环球旅居的最后一天，游牧夫妻回到中国\n\n中国年轻人的失业状况越来越严重。共产党的教育体系被认为是导致年轻成年人就业困难加剧的根本因素。因此，一些大学毕业生不得不从事快递员工作，而在中国出现了一种被称为“全职儿女”的新现象，即个人选择留在家中照顾他们的年迈父母以换取报酬。\n\n# 第 01 期 - 自救指南 | 宇宙时空故事\n\n[https://www.youtube.com/watch?v=Od-Uj5RSsuM](https://www.youtube.com/watch?v=Od-Uj5RSsuM)\n\n![Video preview](https://i.ytimg.com/vi/5s2IW1ImF-I/hqdefault.jpg)\n\n\\- 城市 16 至 24 岁人口的失业率为 17.3％，几乎是 25 至 59 岁劳动者失业率的四倍。\n\n\\- 共产党的教育体系被认为是导致年轻成年人就业困难加剧的根本因素。\n\n\\- 最近的报告表明，由于订单过少，快递人员的工作岗位稀缺，工人过剩。\n\n[https://www.youtube.com/watch?v=0i5bioIYtYY](https://www.youtube.com/watch?v=0i5bioIYtYY)\n\n<video class=\"w-full h-auto max-w-full border border-gray-200 rounded-lg dark:border-gray-700\" controls>\n  <source href=\"https://www.youtube.com/watch?v=N6Q66aTJeH4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n"},{"slug":"how-to-compare-dates-in-javascript","category":"blog","title":"How to compare dates in JavaScript","description":"How to compare dates in JavaScript natively using the Date Object, without using any third-party libraries.","tags":["javascript"],"body":"\nWorking with dates in JavaScript can be tricky to say the least. Recently I needed to compare two dates with one another to see which was greater than, less than, etc.\n\nIn my particular use case, I was using a date-picker that was returning a string like `01/28/2020`. I needed to see if this date was `>=` to the current day.\n\nThe first thing I needed to do was convert this string into a JavaScript Date Object.\n\n```js\nconst date: new Date(\"01/28/2020\");\nconsole.log(date);\n// Tue Jan 28 2020 00:00:00 GMT-0500 (Eastern Standard Time)\n```\n\nThen, compare this date with the current day:\n\n```js\nconst compareDate = new Date('01/28/2020');\nconst today = new Date();\nconsole.log(compareDate >= today);\n// false\n```\n\nThe issue is that even though the dates are the same, the times are not.\n\n```js\nconst compareDate = new Date('01/28/2020');\nconst today = new Date();\nconsole.log('compareDate: ', compareDate);\nconsole.log('today: ', today);\n// compareDate:  Tue Jan 28 2020 00:00:00 GMT-0500 (Eastern Standard Time)\n// today:  Tue Jan 28 2020 21:33:27 GMT-0500 (Eastern Standard Time)\n```\n\nNotice how `compareDate` has all zero's for time. The difference in time is the reason why this comparison fails. To fix this, we need to create the current day without time. We do this by instantiating a new JS Date object by individually passing in the year, month and day.\n\n```js\nconst todayWithoutTime = new Date(\n  new Date().getFullYear(),\n  new Date().getMonth(),\n  new Date().getDate()\n);\nconsole.log('todayWithoutTime: ', todayWithoutTime);\n// todayWithoutTime:  Tue Jan 28 2020 00:00:00 GMT-0500 (Eastern Standard Time)\n```\n\nSo let's try our comparison again.\n\n```js\nconst compareDate = new Date('01/28/2020');\nconst todayWithoutTime = new Date(\n  new Date().getFullYear(),\n  new Date().getMonth(),\n  new Date().getDate()\n);\nconsole.log(compareDate >= todayWithoutTime);\n// true\n```\n\nThat's it. Just remember that when comparing dates in JavaScript it is vital to factor in the time. 😎\n"},{"slug":"installing-go-on-a-mac","category":"blog","title":"Installing Go on a Mac","description":"In this article, I am going to show you how to install & setup Go (Golang) on Mac and also setup/configure VS Code for writing Go (Golang) code.","tags":["go"],"body":"\nIn this article, I am going to show you how to install & setup Go on Mac and also setup/configure VS Code for writing Go code.\n\n## Install\n\nThe easiest way to install go is via go's website [Golang.org](https://golang.org/dl). After going to this page, click on the link for 'Apple macOS' and run the installer.\n\nIf you have [Homebrew](https://brew.sh/) installed you can run the command `brew install golang`\n\nAfter you have installed, let's verify and test that everything is working.\n\nRun this command in your terminal:\n\n```bash\ngo version\n\n# You should see an output similar to the following:\n# go version go1.13.7 darwin/amd64\n```\n\n## Workspace Setup\n\nGo has this concept of a 'workspace,' which is where all of your source code and 3rd party packages, binaries etc. are all stored. On a mac this location is under:\n\n```bash\n/Users/<your mac username>/go\n\n# mine is: /Users/rguss/go/src\n```\n\nThis location is also known as your `GOPATH`. The location of this path and various other Go specific ENV Variables can be located with the command:\n\n```bash\ngo env\n```\n\nYou will also need to create 3 directories inside of your `$GOPATH` with the following:\n\n```bash\nmkdir -p $GOPATH $GOPATH/src $GOPATH/pkg $GOPATH/bin\n```\n\n## Hello World\n\nLet's create a simple hello world program and build it to make sure we have everything configured correctly.\n\nInside of your `$GOPATH/src` directory create a directory called `hello` and then a file called `hello.go` inside of it.\n\nIt should look like this `$GOPATH/src/hello/hello.go`\n\nThen paste the following into `hello.go`:\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Printf(\"Hello, World!\")\n}\n```\n\nThen build it with the go tool:\n\n```bash\ncd $HOME/go/src/hello\ngo build\n```\n\nThen:\n\n```bash\n./hello\n\n# Output should be:\n# Hello, World!\n```\n\nIf you see `Hello, World!` output to the console, you are all set!\n\n## VS Code\n\nThe final step is to set up and configure [VS Code](https://code.visualstudio.com/) to write Go code. It is as simple as\ninstalling a single extension called [Go](https://marketplace.visualstudio.com/items?itemName=ms-vscode.Go). Once installed, you are all set and ready to start writing Go.\n\n## Additional Resources\n\n- [Golang.org](https://golang.org/)\n- [Go.dev](https://go.dev/)\n"},{"slug":"introducing-astro","category":"blog","title":"Introducing Astro: Ship Less JavaScript","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\nThere's a simple secret to building a faster website — _just ship less_.\n\nUnfortunately, modern web development has been trending in the opposite direction—towards _more._ More JavaScript, more features, more moving parts, and ultimately more complexity needed to keep it all running smoothly.\n\nToday I'm excited to publicly share Astro: a new kind of static site builder that delivers lightning-fast performance with a modern developer experience. To design Astro, we borrowed the best parts of our favorite tools and then added a few innovations of our own, including:\n\n- **Bring Your Own Framework (BYOF):** Build your site using React, Svelte, Vue, Preact, web components, or just plain ol' HTML + JavaScript.\n- **100% Static HTML, No JS:** Astro renders your entire page to static HTML, removing all JavaScript from your final build by default.\n- **On-Demand Components:** Need some JS? Astro can automatically hydrate interactive components when they become visible on the page. If the user never sees it, they never load it.\n- **Fully-Featured:** Astro supports TypeScript, Scoped CSS, CSS Modules, Sass, Tailwind, Markdown, MDX, and any of your favorite npm packages.\n- **SEO Enabled:** Automatic sitemaps, RSS feeds, pagination and collections take the pain out of SEO and syndication.\n\nThis post marks the first public beta release of Astro. **Missing features and bugs are still to be expected at this early stage.** There are still some months to go before an official 1.0 release, but there are already several fast sites built with Astro in production today. We would love your early feedback as we move towards a v1.0 release later this year.\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides).\n\n## Getting Started\n\nStarting a new project in Astro is easy:\n\n```shell\n# create your project\nmkdir new-project-directory\ncd new-project-directory\nnpm init astro\n\n# install your dependencies\nnpm install\n\n# start the dev server and open your browser\nnpm run dev\n```\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides).\n\n## How Astro Works\n\nAstro works a lot like a static site generator. If you have ever used Eleventy, Hugo, or Jekyll (or even a server-side web framework like Rails, Laravel, or Django) then you should feel right at home with Astro.\n\nIn Astro, you compose your website using UI components from your favorite JavaScript web framework (React, Svelte, Vue, etc). Astro renders your entire site to static HTML during the build. The result is a fully static website with all JavaScript removed from the final page. No monolithic JavaScript application required, just static HTML that loads as fast as possible in the browser regardless of how many UI components you used to generate it.\n\nOf course, sometimes client-side JavaScript is inevitable. Image carousels, shopping carts, and auto-complete search bars are just a few examples of things that require some JavaScript to run in the browser. This is where Astro really shines: When a component needs some JavaScript, Astro only loads that one component (and any dependencies). The rest of your site continues to exist as static, lightweight HTML.\n\nIn other full-stack web frameworks this level of per-component optimization would be impossible without loading the entire page in JavaScript, delaying interactivity. In Astro, this kind of [partial hydration](https://addyosmani.com/blog/rehydration/) is built into the tool itself.\n\nYou can even [automatically defer components](https://codepen.io/jonneal/full/ZELvMvw) to only load once they become visible on the page with the `client:visible` directive.\n\nThis new approach to web architecture is called [islands architecture](https://jasonformat.com/islands-architecture/). We didn't coin the term, but Astro may have perfected the technique. We are confident that an HTML-first, JavaScript-only-as-needed approach is the best solution for the majority of content-based websites.\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides)\n\n## Embracing the Pit of Success\n\n> A well-designed system makes it easy to do the right things and annoying (but not impossible) to do the wrong things<div class=\"source\"><p>– Jeff Atwood</p>[Falling Into The Pit of Success](https://blog.codinghorror.com/falling-into-the-pit-of-success/)</div>\n\nPoor performance is often framed as a failure of the developer, but we respectfully disagree. In many cases, poor performance is a failure of tooling. It should be difficult to build a slow website.\n\nAstro's main design principle is to lead developers into what [Rico Mariani](https://twitter.com/ricomariani) dubbed \"the pit of success\". It is our goal to build every site \"fast by default\" while also delivering a familiar, modern developer experience.\n\nBy building your site to static HTML by default, Astro makes it difficult (but never impossible 😉) to build a slow site.\n\n## Long-Term Sustainability\n\nAstro is built by the team of open source developers behind [Snowpack](https://snowpack.dev) and [Skypack](https://skypack.dev), with additional contributions from the community.\n\n**Astro is and always will be free.** It is an open source project released under the [MIT license](https://github.com/snowpackjs/astro/blob/main/LICENSE).\n\nWe care deeply about building a more sustainable future for open source software. At the same time, we need to support Astro's development long-term. This requires money (donations alone aren't enough.)\n\nWe're inspired by the early success of projects like [Tailwind](https://tailwindcss.com/), [Rome](https://rome.tools/), [Remix](https://remix.run/), [Ionic](https://ionicframework.com/), and others who are experimenting with long-term financial sustainability on top of Open Source. Over the next year we'll be exploring how we can create a sustainable business to support a 100% free, open source Astro for years to come.\n\nIf your company is as excited about Astro as we are, [we'd love to hear from you.](https://astro.build/chat)\n\nFinally, I'd like to give a **HUGE** thanks to the 300+ developers who joined our earliest private beta. Your feedback has been essential in shaping Astro into the tool it is today. If you're interested in getting involved (or just following along with development) please [join us on Discord.](https://astro.build/chat)\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides)\n"},{"slug":"华山","category":"blog","title":"华山论剑看世间","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/bb/12121221mmm.jpg\" width=900/>\n\n<small>封面图摄于华山山顶，超险的一座大山，好些坡度将近 80 度，爬了一天到达山顶景色很壮阔，西安除了吃外值得一去的地方</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注可以及时收到更新~**\n\n## 好文和学习\n\n**企业级数据可视化应用有哪些机遇与挑战？**  \n<https://mp.weixin.qq.com/s/vvKPJZCZNs8VfM8A07x5SA>  \n蚂蚁@御术在外滩大会关于企业级可视化的分享文字版，从为什么需要、当前挑战和问题和未来趋势来阐述，很适合前端同学一读\n\n**CodeSandbox 是如何让 npm 上的模块直接在浏览器端运行的**  \n<https://www.yuque.com/wangxiangzhong/aob8up/uf99c5>  \nHow we make npm packages work in the browser 的一篇翻译[文章](<](https://hackernoon.com/how-we-make-npm-packages-work-in-the-browser-announcing-the-new-packager-6ce16aa4cee6)>)，译者加入了自己的理解，利用这个思路其实对于一些线上开发的场景可以做不少事情\n\n**What the fuck JavaScrip t 中文版?**  \n<https://github.com/denysdovhan/wtfjs/blob/master/README-zh-cn.md>  \n哈哈哈哈，原来 `\"b\" + \"a\" + +\"a\" + \"a\" = \"baNaNa\"`，还有`[1, 2, 3] + [4, 5, 6]; // -> '1,2,34,5,6'`，你知道是为啥吗？还是不要写这样的代码\n\n**我可能连 GitHub 搜索都不会用**  \n<https://juejin.im/post/6891056415440535565>  \n原来 Github 上面搜索还有这么多神仙技巧...不过我还是觉得简单的才是比较好记住的\n\n## 开源和工具\n\n**Nat - 可以替换你 ls 命令的工具**  \n<https://github.com/willdoescode/nat>  \n比原有 ls 的展示效果要丰富漂亮不少，安装后我已经替换了原有 ls，执行`cargo install natls`，然后`code .zshrc`加上`alias ls='natls'`就好了\n<img src=\"https://gw.alipayobjects.com/zos/k/1q/8TKnYM.jpg\" width=\"800\" />\n\n**Tesseract.js - 支持 100 多种语言的纯 JS OCR**  \n<https://github.com/naptha/tesseract.js>  \n对应前端想识别图片中的文字可以用这个库来做，不过我一直用[Bob](https://ripperhe.gitee.io/bob/#/)这个 Mac 开源软件来做识别和翻译工具\n\n**Denoify-让 NPM 模块支持 Deno 且不需单独维护**  \n<https://github.com/garronej/denoify>  \n一个将 NPM 模块构建 Deno 模块的包，结合着 Github Action 其实就能做到无需手动去维护了，官方是这样介绍的 `For NPM module authors that would like to support Deno but do not want to write and maintain a port for it`\n\n**CSS Spider-一个抄网页 CSS 实现的 Chrome 扩展**  \n<https://cssspider.fresalabs.com/home>  \n试用了下效果还不错，开启后，鼠标放到元素上，对应的样式就出来了，可快速 Copy 使用\n\n**Gitify-一个 github 消息通知的菜单栏工具**  \n<https://github.com/manosim/gitify>  \n用 Electron 实现的一个支持多端的实时通知软件，比较适合开源软件的维护同学\n\n**Asciinema - 方便录制命令行会话过程并通过链接分享**  \n<https://asciinema.org/>  \n平时我们分享一个命令行的使用，一般是录制视频然后 mp4 文件方式分享给他人，这个工具可支持直接录制生成对应 url 给到他人同时支持所有人可见\n\n## 跨端和 iOS\n\n**把闲鱼 APP 长列表流畅度翻了倍**  \n<https://mp.weixin.qq.com/s/dlOQ3Hw_U3CFQM91vcTGWQ>  \n咸鱼关于 Android 原生、flutter 页面的长列表优化经验分享，一个良心教程\n\n**网易云音乐 iOS 14 小组件实战手册**  \n<https://mp.weixin.qq.com/s/gFd8fkJBkQd5RpFSD0P8Ig>  \n国内终于有厂商在慢慢跟进这个功能了，来看看网易音乐是怎么做的\n\n**抖音品质建设 - iOS 启动优化**  \n<https://mp.weixin.qq.com/s/3-Sbqe9gxdV6eI1f435BDg>  \n一个 App 的启动速度给用户的印象很重要，也是让用户喜欢用的的一个因素，抖音 iOS 的启动优化从此文看做了不少事情也说明了原理所在\n\n**Flutter 之全埋点思考与实现**  \n<https://juejin.im/post/6892371163859976199>  \n埋点对于阿里前端的同学应该再熟悉不过了，不过假如我问你 Flutter 埋点的原理你知道吗？\n\n**QQ 音乐 Android 编译提速之路**  \n<https://juejin.im/post/6891957803813584909>  \n一直觉得 QQ 音乐整体 App 做的不错，借此文来学习一波 QQ 音乐团队在增量编译组件研发上的探索与实践\n\n## 灵感和有趣\n\n**语雀产品经理的成长之路**  \n<https://www.yuque.com/fangqiao/oe8iog/vk6m19>  \n为什么感觉语雀的产品越做越好，同时有一条主线执行下去呢？因为它的产品经理几年都没有换过\n\n**视觉设计中发现的 11 种视错觉**  \n<https://mp.weixin.qq.com/s/zGdXBq4RDLaPYduEHJiHFg>  \n日常中大家都可能会碰到一些神奇的场景，让人产生视觉错觉，本文来告诉你原因所在\n\n**Notion 的思想来源和投资人**  \n<https://mp.weixin.qq.com/s/eatQQa-ArDI96wROtX66dQ>  \n好吧这个软件之前就被“吹”得很火，我也反复几个月内至少试用过三次还是觉得有些复杂最后给放弃了，不过还是有很多人用上后就特别喜欢了\n"},{"slug":"无忧孩童","category":"blog","title":"无忧孩童","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/vf/100.jpg\" width=900/>\n\n<small>在湖南的小路上看到一群小孩在无忧的玩，还有那种巨高兴在路上打滚的，很是快乐，潮流周刊也 100 期了，希望你也快乐～</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此专栏，方便获取更新通知**\n\n## 技术相关\n\n**WebRTC 技术介绍**  \n<https://juejin.cn/post/7151932832041058340>  \n文章讲了一些 WebRTC 基础知识，以及一些简单的 Demo，可以了解一下。\n\n**Recoil 状态管理方案的浅入浅出**  \n<https://mp.weixin.qq.com/s/hwTdALHFbMHPRzJEYqvaVA>  \nRecoil 是 Facebook 推出的一款专门针对 React 应用的状态管理库，在一定程度上代表了目前的一种发展趋势，在使用时觉得一些理念很先进，能极大地满足作为一个前端开发者的数据需求，本文对 Recoil 的这些特性做一个梳理。\n\n**Which is the fastest way to find if something exists in an Array in Javascript?**  \n<https://medium.com/@tiagobertolo/which-is-the-fastest-way-to-find-if-something-exists-in-an-array-in-javascript-49ab24051efb>  \n在 Javascript 中查找数组中是否存在某些内容的最快方法是什么？可以去看看说不定有时候优化的时候有用。\n\n**11 Amazing New JavaScript Features in ES13**  \n<https://javascript.plainenglish.io/es13-javascript-features-eed7ed2f1497>  \n最近这几年 ES 的发展速度确实比之前我们认识的 JS 快多了。\n\n## 潮流开源\n\n**Pake：很简单的用 Rust 来打包网页 Mac App**  \n<https://github.com/tw93/Pake>  \n周末将之前用 Rust 打包的那个微信读书 Mac App 给开源了，其实底层比较简单，直接使用的 Tauri，不过可以基于他去打包一些你常用的 App。  \n<img src=\"https://cdn.fliggy.com/upic/9Y3lrP.jpg\" width=\"800\"/>\n\n**duf：更好的 df 替换工具**  \n<https://github.com/muesli/duf>  \n一个关于磁盘使用率的命令行工具。  \n<img src=\"https://cdn.fliggy.com/upic/eR6Xnp.jpg\" width=\"800\"/>\n\n**Boring Avatars：不无聊的头像**  \n<https://boringavatars.com/>  \n<img src=\"https://cdn.fliggy.com/upic/E7x6G9.png\" width=\"800\"/>\n\n**Apple Design Resources**  \n<https://developer.apple.com/design/resources/>  \n原来可以直接去官网下载苹果的一些设计素材，很新新及时的感觉。  \n<img src=\"https://cdn.fliggy.com/upic/NdMpVh.png\" width=\"800\"/>\n\n**sharing：通过命令行的方式在 iOS 和 Android 设备间分享文件**  \n<https://github.com/parvardegr/sharing>  \n唯一的好处就是不需要下载 App 了，不过其实很好的方式可能是用通用社交 App 了。\n\n## 随便看看\n\n**写给所有 Mac 用户的摸鱼指北**  \n<https://sspai.com/post/75805>  \n这篇文章关于 Mac 的效率指南讲得还不错，很适合小白阅读。\n\n**择时无用？这可能 A 股最大的谎言**  \n<https://www.huxiu.com/article/687436.html>  \n作者认为，想要在 A 股获得超额收益，不仅仅是散户，即使是对于机构资金，择时策略也是有效方法之一。\n\n**为什么毫米波雷达无法识别静态物体？**  \n<https://www.zhihu.com/question/308426613>  \n理论上相对位置发生变化应该是可以识别出来才对，问题主要是针对车用的毫米波雷达，从提问者了解的情况来看，目前的自动驾驶半自动驾驶系统对静态物体的识别能力都比较差。\n\n**手机厂商要“消灭 SIM 卡”？**  \n<https://finance.sina.com.cn/jjxw/2022-09-29/doc-imqqsmrp0933136.shtml>  \n苹果公司新一代 iPhone 手机发布以后，其采用的两项技术引发了公众关注：一项是卫星通讯技术，另一项是美版 iPhone 14 不再需要 SIM 卡，改用 eSIM 替代。不过遗憾的是中国享受不到这个技术。\n\n**10 Little macOS Apps that Make a Big Difference in 2022**  \n<https://medium.com/@aplaceofmind/10-little-macos-apps-that-make-a-big-difference-in-2022-part-1-c6428f92a079>  \n作者推荐了 10 个 Mac 上的小软件，有兴趣可以试试。\n"},{"slug":"日本大阪海游馆","category":"blog","title":"日本大阪海游馆","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/1i/nn4eEv.jpg\" width=\"800\" />\n\n<small>封面图日本大阪海游馆，拥有超极大[鲸鲨](https://gw.alipayobjects.com/os/k/oh/1213213123iii.mp4)而著名，海洋生物种类比想象多很多，等明年国外疫情结束，假如到大阪旅游除去环球影城最推荐这个</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注此专栏可以及时收到更新~**\n\n## 好文和学习\n\n**我的前端成长之路：内观自在，外观世音，追寻内心平静**  \n<https://mp.weixin.qq.com/s/yjAzgpBpLUrAKgIZd__sNg>  \n来自飞猪前端圣司的一篇关于自我成长的总结文章，校招毕业 4 年时间从 P5 到 P8，内观自在，外观世音，推荐前端同学一读\n\n**对开发人员有用的定律、理论、原则和模式**  \n<https://github.com/nusr/hacker-laws-zh>  \n值得收藏和多次阅读的程序员定律，里面收集很多抽象经验的解释，比如说「过早优化是万恶之源」、「九个女人不能在一个月内生一个孩子 」\n\n**解释 JavaScript 的内存管理**  \n<https://felixgerschau.com/javascript-memory-management>  \n我们平时写代码的时候几乎不太考虑 JS 的内存管理，因为浏览器已经帮忙做了，但是有时候假如碰到内存泄露，那懂一些原理会有便于你排查问题\n\n**聊一聊二维码扫描登录原理**  \n<https://juejin.im/post/6844904111398191117>  \n可先想后看，假如让你实现一个二维码扫码登录的功能你会怎么做？\n\n**为什么 IPv6 难以取代 IPv4**  \n<https://draveness.me/whys-the-design-ipv6-replacing-ipv4/>  \n西电学弟的文章，从网络原理角度来解释为什么 IPv6 难以取代 IPv4，整体博客质量超级高，值得关注\n\n**使用 Emoji 来创建 CSS Shapes**  \n<https://css-tricks.com/creating-css-shapes-with-emoji/>  \n思路还不错，文章通过不少 Demo 来讲述将 Emoji 图标的形状样子内联到文字环绕的效果\n\n## 开源和工具\n\n**Gazepass - 无密码的登录 API**  \n<https://gazepass.com/>  \n上周周刊中[《Meet Face ID and Touch ID for the Web》](https://webkit.org/blog/11312/meet-face-id-and-touch-id-for-the-web/)，刚想去折腾一下，就有人给产品化出来了，效果实现很赞，说不定不久将来在 Web 中输入框密码类型就变成可选状态了\n<img src=\"https://cdn.fliggy.com/upic/WZe3kK.gif\" width=\"800\" />\n\n**RSSHub - 万物皆可 RSS**  \n<https://github.com/DIYgod/RSSHub>  \n对于有 RSS 阅读习惯的同学不要错过这个工具，一个很简单易用、易于扩展的 RSS 生成器，借此可以给平时不支持 RSS 的内容网站生成 RSS 订阅源\n\n**iOS 上的 Linux Shell 工具**  \n<https://github.com/ish-app/ish/>  \niOS 上的命令行工具，想想可以用它来玩什么？\n\n**使用 TensorFlow.js 进行 NSFW 检测**  \n<https://github.com/infinitered/nsfwjs>  \nNSFW 指 Not Safe For Work ，这个库叫 nsfwjs，通过 TensorFlow.js 在浏览器快速识别有点点那个啥的图像，别多想，还是去看看如何实现的~\n\n**Eta - 又来了一个新的模版引擎**  \n<https://eta.js.org/>  \n其实 tpl 挺好用的，就是感觉有些上古时代的产物了，Eta 相比就潮流一些了，可以同时在 Node、Deno 和浏览器中使用，性能好、轻量、配置性更强一些\n\n**使用 GitHub Actions 等生成你的跑步主页**  \n<https://github.com/yihong0618/running_page>  \n思路很不错，借助 GitHub Actions、Gatsby、Vercel 自动部署、Mapbox 地图等能力可以将你的平时的跑步记录(Keep、Nike、Garmin 等)生成一个自动更新的个人跑步主页\n\n## iOS 和多端\n\n**Native 地图与 Web 融合技术的应用与实践**  \n<https://mp.weixin.qq.com/s/RKGJOtRMjTetTZRIGzqH_Q>  \n同层渲染是移动端 H5 中近年的一种性能体验“黑科技”优化技术，也即将 WebView 与 Native 组件叠加到一起共处一个页面，如打车的地图用 Native 的，操作部分用 H5 来实现，美团的解决方案可供输入\n\n**自研 iOS 热更新机制——OCPack 技术方案总结**  \n<https://juejin.im/post/6884833291740905480>  \n讲了一个 iOS 客户端动态化技术方案，不过更多是看看思路以及热更新实现的一些原理，这东西由于 iOS 审核的原因比较难大规模使用\n\n**iOS 性能优化实践：头条抖音如何实现 OOM 崩溃率下降 50%+**  \n<https://mp.weixin.qq.com/s/4-4M9E8NziAgshlwB7Sc6g>  \nOOM (Out Of Memory)指的是在 iOS 设备上当前应用因为内存占用过高而被操作系统强制终止，在用户侧的感知就是 App 一瞬间的闪退，Crash 对于客户端同学很好理解但是对于前端却很头疼，来看看头条的解决思路是怎么样的？\n\n**如何进行 iOS Widget 开发？**  \n<https://mp.weixin.qq.com/s/xXEWWHXt4oKDSboogTbTZA>  \n盒马同学基于盒马小镇的 Widget 开发，分享在登录授权、数据更新、界面渲染以及审核上的实践经验\n\n## 灵感和有趣\n\n**产品经理如何做产品架构设计**  \n<http://www.woshipm.com/pd/4231285.html>  \n对于产品经理来说，发展到一定阶段后，日常的工作内容往往离不开产品架构设计。这是一个极其细致的活，需要产品经理有很强的架构能力。那么产品经理如何才能摸清产品的底层逻辑、提升对产品的认知，做好产品架构呢？\n\n**到底几点睡觉才算是不叫熬夜？**  \n<https://daily.zhihu.com/story/9729486>  \n最好还是别熬夜，不如今天就早点睡吧\n\n**人口普查究竟查什么？**  \n<https://mp.weixin.qq.com/s/Hc6TR83XRpwxW_g3vIdZXw>  \n回形针近期的一篇科普文，在中国人口普查是如何进行的？前几次的普查究竟查到了什么？\n\n**如何有效地进行代码 Review？**  \n<https://mp.weixin.qq.com/s/uFivYfX53s5zAe6hacznlg>  \n腾讯技术同学关于为什么要做以及如何高效做 Code Review 的一篇文章\n\n**一个纯 CSS 游戏 - You Must Build a Lighthouse.**  \n<https://codepen.io/ivorjetski/pen/OJXbvdL>  \n游戏动效做的很不错，可以重点学习作者一些效果是如何借助 CSS 实现的\n"},{"slug":"日积月累滴水穿石","category":"blog","title":"日积月累滴水穿石","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<blockquote class=\"twitter-tweet\"><p lang=\"zh\" dir=\"ltr\">小人物的十年撸毛史（下）2017-2023<br>原本计划这篇写一下撸毛赛道的竞争现状与趋势分析的，毕竟这个才是干货，经历只能当个爽文看看，因为上一篇反馈还不错，想了下还是决定把 17-23 年写完。<br><br>1/n<br>一、17-19 年少得志后的至暗时刻… <a href=\"https://t.co/Ce8Yl6u1kr\">pic.twitter.com/Ce8Yl6u1kr</a></p>&mdash; 小人物 (@MetaHunter168) <a href=\"https://twitter.com/MetaHunter168/status/1671688313470861317?ref_src=twsrc%5Etfw\">June 22, 2023</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<audio controls>\n       <source src=\"/audio/amazing test.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\n<br />\n<br />\n<br />\n\n<br />\n<br />\n<br />\n\n在这个 AI 时代，越来越多的工具将人工智能融入到其平台中，为我们提供了无限的可能性。让我们一起探索一些令人振奋的工具，它们可以帮助我们完成各种任务，从设计和内容创作到项目管理和数据分析。这些工具充满了 AI 的魔力，为我们节省了时间和精力，让我们可以专注于更重要的事情。\n\n1. Canva\n\n以前，我用 Canva 完成了一系列的任务，如创建社交媒体帖子、发票、简历、网站、演示文稿、视频、徽标等等。然而，随着 AI 技术的出现，Canva 通过将几个 AI 功能集成到其平台上，取得了重大进步。\n\n让我分享一些 Canva 提供的显著 AI 特性：\n\n- Canva Doc 中的魔法写作：这个特性使用户能够轻松生成书面内容。它能够快速简单地帮助组织各种目的的文本。\n\n- 魔法设计：通过这个功能，用户可以亲眼目睹 AI 的魔力。只需提供一个提示或想法，Canva 的 AI 算法就能为你生成令人眼花缭乱的设计，让你无需大费周章地创造视觉吸引力的设计。\n\n- 魔法橡皮擦：厌倦了图片上的多余元素吗？这个 AI 功能就在这里帮助你。只需点击几下，你就能神奇地从你的图像中删除任何不需要的元素，确保图像干净整洁。\n\n- 魔法编辑：需要在你的设计中添加或修改元素吗？这个功能让你能够轻松实现。无论你是想添加新的元素，还是调整现有的元素，Canva 的 AI 功能都能简化这个过程。\n\n这只是 Canva 提供的 AI 功能的一部分例子。通过利用这些尖端技术，我能在几分钟内完成设计工作，节省了时间和精力。\n\n2. ChatGPT\n\n作为一个独立创业者，我每天都有很多任务要处理。最近，我甚至接受了学习如何市场化产品和吸引投资者的挑战。上周，我完全自己创建了一个投资者介绍。这就是 ChatGPT 派上用场的地方。\n\n我用 ChatGPT 最有效的提示之一是：“我希望你扮演一个有着几十年[职业名称]经验的世界级专家。我会向你要求输出，你必须给我独特的、专业写作的作品。”\n\n通过使用这个提示，ChatGPT 扮演了一个有经验的导师的角色，随时为我提供任何我询问的主题的有价值的见解。\n\n例如，当我使用这个提示时，我会得到超出我预期的优秀回答。你可以根据你的专业定制提示，并询问 ChatGPT 任何你想知道的事情。\n\nChatGPT 真的就像我可以随时寻求指导和专业知识的专家顾问，成为了我日常生活中的一个宝贵工具。\n"},{"slug":"白云滑雪场","category":"blog","title":"白云滑雪场","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/o3/ZebwPr.jpg\" width=\"800\" />\n\n<small>封面图摄于某年冬天新疆的白云滑雪场，从高处滑下来很是[刺激](https://gw.alipayobjects.com/os/k/nd/dsajdasdsad.mp4)，秋冬有很多平时见不到的非内陆美景，可以一去~</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注此专栏可以及时收到更新~**\n\n## 好文和学习\n\n**Webpack 5 终于发布啦**  \n<https://webpack.js.org/blog/2020-10-10-webpack-5-release/>  \n阔别两年，webpack 5 终于正式发布了，可通过此文来了解下重要更新有哪一些，以及其构建效率和质量是怎么去提升的，中文可见[详细内容>>](https://juejin.im/post/6882663278712094727)\n\n**ECMAScript 2020 新增特性**  \n<https://juejin.im/post/6883306672064987149>  \nECMAScript 2020 是 ECMAScript 语言规范的第 11 版，新增的这 9 个新特性值得一学\n\n**Serverless 未来十年发展解读**  \n<https://juejin.im/post/6883773727733972999>  \n本文整理自 Johann Schleier-Smith 在 [ServerlessDays China](https://cloud.tencent.com/developer/salon/live-1224/agenda-10025) 的演讲，主要分为四个部分：首先阐述 UC Berkeley 怎样来定义 Serverless ，之后会分享一些近期的研究成果和进展，最后提出对云计算未来的一些预测和设想\n\n**浏览器是如何工作的**  \n<https://king-hcj.github.io/2020/10/05/google-v8/>  \n一篇文章方方面面的介绍到了 Chrome V8，让你更懂 JavaScript 运行，很是详细\n\n**超全的 Linux Shell 文本处理工具集锦**  \n<https://segmentfault.com/a/1190000037480939>  \n每周学一点新知识，用过 Shell 处理一些文本才知道原来这么简单方便，此文将一些处理文本常见的工具都介绍了一个遍，可先了解到用的时候再查\n\n**一文了解文件上传全过程**  \n<https://segmentfault.com/a/1190000037411957>  \n一篇详细的介绍文件上传流程的文章，从前置知识、请求端、服务端、接收端一层一层来带着入学的感觉\n\n## 开源和工具\n\n**Zipson - Json 压缩工具**  \n<https://github.com/jgranstrom/zipson>  \nZipson 是一个让原本 `JSON.parse/stringify` 增加了压缩和流媒体支持的临时替代方案，感觉前后端传输中，接口先压缩吐出数据，前端通过解压获取 Json，可让传输数据变小 50%\n\n**Bubble Tea：一个强大轻量的 TUI 框架**  \n<https://github.com/charmbracelet/bubbletea>  \nBubble Tea 一个基于 Elm 架构的 Go 框架，借此可用有趣、函数式、带状态的方式去编写命令行 APP，效果很不错，虽然是 GO 语言，不过可触类旁通研究一波\n<img src=\"https://gw.alipayobjects.com/zos/k/1v/12123213123.gif\" width=\"800\" />\n\n**BlurHash: 图片懒加载舒服的占位符**  \n<https://github.com/woltapp/blurhash>  \n之前我们一般使用纯灰色亦或是骨架占位符的方式来缓存暂未出来的图片，虽然看起来没问题但是不讨设计喜欢，BlurHash 是将原有会会的占位图，变成模糊漂亮的彩色，可能设计会喜欢\n\n**Drogon：一个基于 C++14/17 的 Http 应用框架**  \n<https://github.com/an-tao/drogon>  \nDrogon 是一个基于 C++14/17 的 Http 应用框架，通可以方便的使用 C++构建各种类型的 Web 应用服务端程序，写习惯 Node 的同学看看这个会让你惊讶的\n\n**detect-gpu:一个 GPU 的检测库**  \n<https://github.com/TimvanScherpenzeel/detect-gpu>  \n根据 GPU 的 3D 渲染基准分数对 GPU 进行分类，开发人员可借此结果为图形密集型应用程序提供合理的默认设置\n\n**Plausible Analytics：Google Analytics 替代品**  \n<https://github.com/plausible/analytics>  \nPlausible Analytics 是一个简单、轻量且隐私友好的 Google Analytics 替代品，不使用 cookie，自托管或者云上部署都可以\n\n**Awesome YouTubers**  \n<https://github.com/JoseDeFreitas/awesome-youtubers>  \n以上这个 Awesome YouTubers 将技术领域值得关注的 YouTuber 给挑选出来了，适合那种看视频学习的同学来有选择关注~\n\n## iOS 和多端\n\n**1 分钟将 vscode 撸成小霸王**  \n<https://juejin.im/post/6882576431503638536>  \n这个是真的“浪”，借助[JSNES](https://github.com/bfirsh/jsnes)模拟器弄了一个 VSCode 的小霸王游戏机，VScode 插件搜索「小霸王」即可使用，这个想法很是不错~\n\n**iOS 后台锁屏监听摇一摇**  \n<https://juejin.im/post/6881420727371694093>  \n不会吧这也行系列，一般情况下出于省电、权限、合理性等因素考虑一些奇怪的需求 iOS 不是很好实现，如当 APP 处于后台或锁屏状态时，依旧可以监听到摇一摇，看看这里是怎么做的\n\n**Flutter 1.22 正式发布**  \n<https://juejin.im/post/6879048672597213198>  \n来看一看 Flutter 1.22 趁着 iOS 14/Android 11 发布季，都更新了一些什么样的功能？\n\n## 灵感和设计\n\n**哪些工具使你成为一个更好的程序员？**  \n<https://news.ycombinator.com/item?id=23468193>  \nHacker News 上面比较热烈的一个讨论，看看国外的程序员怎么说？\n\n**很炫酷的 3D 可视化的星空**  \n<http://stars.chromeexperiments.com/>  \n一个可交互式的三维可视化恒星邻居，包括超过 10 万颗附近的恒星，点击 URL 进入很是不错\n\n**Blush:插图定制生成工具**  \n<https://blush.design/zh-CN>  \n这个工具不错的是可以自定义插图的每一部分来创建自己的构图，同时种类也很多，对于前端同学写一些图文搭配 PPT 蛮适合\n\n**2020 中国奢侈品消费者数字行为洞察报告**  \n<https://mp.weixin.qq.com/s/fsBblPTiTjYXg1vUKzK_Jw>  \n从此文来了解下后疫情时代中国奢侈品消费市场呈现的趋势、消费链路以及品牌打法，还可结合“名媛拼团”侧面来剖析下\n\n**用纯 CSS 画了一个棕色美女**  \n<https://diana-adrianne.com/purecss-character/>  \n头发、眼睛、鼻子和皮肤阴影画的很逼真，可以打开开发者调试看里面 CSS 是怎么写的\n"},{"slug":"逍遥自在行动","category":"blog","title":"逍遥自在行动","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<small>封面来源于最近去良渚公园找一个草地铺张毯子吹风睡觉时候拍到的一棵树，很有感觉，本来想着将人给 P 掉的，不过想了想，有人反而更好，不是那种看着像壁纸一样的千篇一律反而不好看了，这样的图我觉得比壁纸高级不少。</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知**\n\n## 潮流工具\n\n<audio controls>\n       <source src=\"/audio/audiotest.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n"},{"slug":"马来西亚 Api","category":"blog","title":"马来西亚 Api","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<audio controls>\n       <source src=\"/audio/audiotest.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n  </audio>\n\n<br />  \n<br />  \n<br />\n\n在这个 AI 时代，越来越多的工具将人工智能融入到其平台中，为我们提供了无限的可能性。让我们一起探索一些令人振奋的工具，它们可以帮助我们完成各种任务，从设计和内容创作到项目管理和数据分析。这些工具充满了 AI 的魔力，为我们节省了时间和精力，让我们可以专注于更重要的事情。\n\n1. Canva\n\n以前，我用 Canva 完成了一系列的任务，如创建社交媒体帖子、发票、简历、网站、演示文稿、视频、徽标等等。然而，随着 AI 技术的出现，Canva 通过将几个 AI 功能集成到其平台上，取得了重大进步。\n\n让我分享一些 Canva 提供的显著 AI 特性：\n\n- Canva Doc 中的魔法写作：这个特性使用户能够轻松生成书面内容。它能够快速简单地帮助组织各种目的的文本。\n\n- 魔法设计：通过这个功能，用户可以亲眼目睹 AI 的魔力。只需提供一个提示或想法，Canva 的 AI 算法就能为你生成令人眼花缭乱的设计，让你无需大费周章地创造视觉吸引力的设计。\n\n- 魔法橡皮擦：厌倦了图片上的多余元素吗？这个 AI 功能就在这里帮助你。只需点击几下，你就能神奇地从你的图像中删除任何不需要的元素，确保图像干净整洁。\n\n- 魔法编辑：需要在你的设计中添加或修改元素吗？这个功能让你能够轻松实现。无论你是想添加新的元素，还是调整现有的元素，Canva 的 AI 功能都能简化这个过程。\n\n这只是 Canva 提供的 AI 功能的一部分例子。通过利用这些尖端技术，我能在几分钟内完成设计工作，节省了时间和精力。\n\n2. ChatGPT\n\n作为一个独立创业者，我每天都有很多任务要处理。最近，我甚至接受了学习如何市场化产品和吸引投资者的挑战。上周，我完全自己创建了一个投资者介绍。这就是 ChatGPT 派上用场的地方。\n\n我用 ChatGPT 最有效的提示之一是：“我希望你扮演一个有着几十年[职业名称]经验的世界级专家。我会向你要求输出，你必须给我独特的、专业写作的作品。”\n\n通过使用这个提示，ChatGPT 扮演了一个有经验的导师的角色，随时为我提供任何我询问的主题的有价值的见解。\n\n例如，当我使用这个提示时，我会得到超出我预期的优秀回答。你可以根据你的专业定制提示，并询问 ChatGPT 任何你想知道的事情。\n\nChatGPT 真的就像我可以随时寻求指导和专业知识的专家顾问，成为了我日常生活中的一个宝贵工具。\n"}]
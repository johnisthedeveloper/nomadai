[{"slug":"1024快乐","category":"blog","title":"1024快乐","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/bv/IMG_1115.jpg\" width=900/>\n\n<small>封面来源于周六径山花海的航拍图，风和日丽露营还是很舒服的。今天刚好是 1024 程序员节日，一直觉得日子过得还是需要有些仪式感才比较好，周末写了一个小彩蛋「[**祝你 1024 节日快乐**](https://tw93.netlify.app/)」，祝大家万事如意，以后写的代码都是你想写的代码。</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此专栏，方便获取更新通知**\n\n## 技术相关\n\n**The Future of the Web is on the Edge**  \n<https://deno.com/blog/the-future-of-web-is-on-the-edge>  \n这个概念不错，很酷。\n\n**2022 Web 年鉴 — JavaScript**  \n<https://mp.weixin.qq.com/s/cvdf4NPcOs25b2XHjoInrg>  \n一起来看看今年的 JavaScript 到底是什么样子。\n\n**A World-Class Code Playground with Sandpack**  \n<https://www.joshwcomeau.com/react/next-level-playground/>  \n看到标题第一感受是外国人怎么也喜欢吹牛逼，一看效果，还真不错，以后博客中可以嵌入代码运行了。  \n<img src=\"https://gw.alipayobjects.com/zos/k/0b/q8vquC.png\" width=\"800\" />\n\n## 潮流开源\n\n**helix：Vim 风格的后现代编辑器**  \n<https://github.com/helix-editor/helix>  \n使用 Rust 开发的，喜欢 Vim 的同学强烈推荐试试看。  \n<img src=\"https://gw.alipayobjects.com/zos/k/j1/3hQpSO.jpg\" width=\"800\">\n\n**Textual：Python 下的 Text User Interface**  \n<https://github.com/Textualize/textual>  \nTextual 是一个 Python 的框架，用于在命令行中创建交互型的 UI 效果，很潮流，注意截图其实是一个命令行窗口。  \n<img src=\"https://gw.alipayobjects.com/zos/k/6r/HxuZHn.jpg\" width=\"800\" />\n\n**rust-course：Rust 语言圣经**  \n<https://github.com/sunface/rust-course>  \n工作之余的第二语言来试试 Rust 吧，这个教程还不错。  \n<img src=\"https://gw.alipayobjects.com/zos/k/0s/T70eT4.jpg\" width=\"800\" />\n\n**wolfia：Turn your app into a link**  \n<https://www.wolfia.com/>  \n这个想法很神奇，别人都是将网页往 App 方向走，这个是你上传一个 APK，把你的应用放到虚拟机里面当做一个网页 URL 来使用。  \n<img src=\"https://gw.alipayobjects.com/zos/k/s7/FbHDI9.png\" width=\"800\" />\n\n**Gimli Tailwind：Chrome 调试 Tailwind 的扩展**  \n<https://chrome.google.com/webstore/detail/gimli-tailwind/fojckembkmaoehhmkiomebhkcengcljl>  \n<img src=\"https://gw.alipayobjects.com/zos/k/0h/vigGks.png\" width=\"800\" />\n\n## 随便看看\n\n**为什么现在越来越多的人不爱发朋友圈了？**  \n<https://www.zhihu.com/question/310673334>  \n我好像最近也是也是，更喜欢和程序员工程师同学交流了。\n\n**Web3 咖啡馆见闻：狂热、暴富、落寞，欲望永不打烊**  \n<https://www.huxiu.com/article/689609.html>  \n期待 Web3 能够像之前 14 年左右的互联网那样火起来，比想象中要有趣不少，文字最后一句很妙。\n\n**Apple Watch Ultra 一个月体验，不极限运动买它值吗？**  \n<https://www.huxiu.com/article/689181.html>  \n李大锤的一个视频，有一说一 Ultra 是真的漂亮。\n\n**五十岁咸鱼翻身转码上岸**  \n<https://www.1point3acres.com/bbs/thread-918311-1-1.html>  \n我的天！50 岁在职半年自学这么多概念，一个月 leetcode300+海投 500+这执行力真的绝了！\n\n**我换上了 Wi-Fi 6，它用起来怎么样？**  \n<https://sspai.com/post/76305>  \n好像我去年换上的就是 wifi6 千兆，一般 40m/s 的速度还是很爽的，而且没有想象中贵，但是带来的幸福感还是很足的。\n"},{"slug":"Amazing test","category":"blog","title":"Amazing test","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<YouTube id=\"xtTy5nKay_Y\" />\n\n<YouTube id=\"https://youtu.be/NkShQ1wwiCg\" />\n\n<YouTube\n  id=\"xtTy5nKay_Y\"\n  poster=\"https://images-assets.nasa.gov/image/0302063/0302063~orig.jpg\"\n/>\n\n%[https://www.youtube.com/watch?v=0i5bioIYtYY]\n\n[https://www.youtube.com/watch?v=0i5bioIYtYY]\n\n<audio controls>\n       <source src=\"/audio/amazing test.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\n<br />\n<br />\n<br />\n<video width=\"1280\" height=\"720\" controls>\n  <source src=\"/audio/test.mp4\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>\n\n<br />\n<br />\n<br />\n<video width=\"320\" height=\"240\" controls>\n  <source src=\"https://www.youtube.com/watch?v=0i5bioIYtYY\" type=\"video/mp4\">\nYour browser does not support the video tag.\n</video>\n\n<br />\n<br />\n<br />\n\n在这个 AI 时代，越来越多的工具将人工智能融入到其平台中，为我们提供了无限的可能性。让我们一起探索一些令人振奋的工具，它们可以帮助我们完成各种任务，从设计和内容创作到项目管理和数据分析。这些工具充满了 AI 的魔力，为我们节省了时间和精力，让我们可以专注于更重要的事情。\n\n1. Canva\n\n以前，我用 Canva 完成了一系列的任务，如创建社交媒体帖子、发票、简历、网站、演示文稿、视频、徽标等等。然而，随着 AI 技术的出现，Canva 通过将几个 AI 功能集成到其平台上，取得了重大进步。\n\n让我分享一些 Canva 提供的显著 AI 特性：\n\n- Canva Doc 中的魔法写作：这个特性使用户能够轻松生成书面内容。它能够快速简单地帮助组织各种目的的文本。\n\n- 魔法设计：通过这个功能，用户可以亲眼目睹 AI 的魔力。只需提供一个提示或想法，Canva 的 AI 算法就能为你生成令人眼花缭乱的设计，让你无需大费周章地创造视觉吸引力的设计。\n\n- 魔法橡皮擦：厌倦了图片上的多余元素吗？这个 AI 功能就在这里帮助你。只需点击几下，你就能神奇地从你的图像中删除任何不需要的元素，确保图像干净整洁。\n\n- 魔法编辑：需要在你的设计中添加或修改元素吗？这个功能让你能够轻松实现。无论你是想添加新的元素，还是调整现有的元素，Canva 的 AI 功能都能简化这个过程。\n\n这只是 Canva 提供的 AI 功能的一部分例子。通过利用这些尖端技术，我能在几分钟内完成设计工作，节省了时间和精力。\n\n2. ChatGPT\n\n作为一个独立创业者，我每天都有很多任务要处理。最近，我甚至接受了学习如何市场化产品和吸引投资者的挑战。上周，我完全自己创建了一个投资者介绍。这就是 ChatGPT 派上用场的地方。\n\n我用 ChatGPT 最有效的提示之一是：“我希望你扮演一个有着几十年[职业名称]经验的世界级专家。我会向你要求输出，你必须给我独特的、专业写作的作品。”\n\n通过使用这个提示，ChatGPT 扮演了一个有经验的导师的角色，随时为我提供任何我询问的主题的有价值的见解。\n\n例如，当我使用这个提示时，我会得到超出我预期的优秀回答。你可以根据你的专业定制提示，并询问 ChatGPT 任何你想知道的事情。\n\nChatGPT 真的就像我可以随时寻求指导和专业知识的专家顾问，成为了我日常生活中的一个宝贵工具。\n\n<video class=\"w-full h-auto max-w-full border border-gray-200 rounded-lg dark:border-gray-700\" controls>\n  <source href=\"https://www.youtube.com/watch?v=N6Q66aTJeH4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n# 记录 3 年半环球旅居的最后一天，游牧夫妻回到中国\n\n中国年轻人的失业状况越来越严重。共产党的教育体系被认为是导致年轻成年人就业困难加剧的根本因素。因此，一些大学毕业生不得不从事快递员工作，而在中国出现了一种被称为“全职儿女”的新现象，即个人选择留在家中照顾他们的年迈父母以换取报酬。\n\n# 第 01 期 - 自救指南 | 宇宙时空故事\n\n[https://www.youtube.com/watch?v=Od-Uj5RSsuM](https://www.youtube.com/watch?v=Od-Uj5RSsuM)\n\n![Video preview](https://i.ytimg.com/vi/5s2IW1ImF-I/hqdefault.jpg)\n\n\\- 城市 16 至 24 岁人口的失业率为 17.3％，几乎是 25 至 59 岁劳动者失业率的四倍。\n\n\\- 共产党的教育体系被认为是导致年轻成年人就业困难加剧的根本因素。\n\n\\- 最近的报告表明，由于订单过少，快递人员的工作岗位稀缺，工人过剩。\n\n[https://www.youtube.com/watch?v=0i5bioIYtYY](https://www.youtube.com/watch?v=0i5bioIYtYY)\n\n<video class=\"w-full h-auto max-w-full border border-gray-200 rounded-lg dark:border-gray-700\" controls>\n  <source href=\"https://www.youtube.com/watch?v=N6Q66aTJeH4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n"},{"slug":"how-to-compare-dates-in-javascript","category":"blog","title":"How to compare dates in JavaScript","description":"How to compare dates in JavaScript natively using the Date Object, without using any third-party libraries.","tags":["javascript"],"body":"\nWorking with dates in JavaScript can be tricky to say the least. Recently I needed to compare two dates with one another to see which was greater than, less than, etc.\n\nIn my particular use case, I was using a date-picker that was returning a string like `01/28/2020`. I needed to see if this date was `>=` to the current day.\n\nThe first thing I needed to do was convert this string into a JavaScript Date Object.\n\n```js\nconst date: new Date(\"01/28/2020\");\nconsole.log(date);\n// Tue Jan 28 2020 00:00:00 GMT-0500 (Eastern Standard Time)\n```\n\nThen, compare this date with the current day:\n\n```js\nconst compareDate = new Date(\"01/28/2020\");\nconst today = new Date();\nconsole.log(compareDate >= today);\n// false\n```\n\nThe issue is that even though the dates are the same, the times are not.\n\n```js\nconst compareDate = new Date(\"01/28/2020\");\nconst today = new Date();\nconsole.log(\"compareDate: \", compareDate);\nconsole.log(\"today: \", today);\n// compareDate:  Tue Jan 28 2020 00:00:00 GMT-0500 (Eastern Standard Time)\n// today:  Tue Jan 28 2020 21:33:27 GMT-0500 (Eastern Standard Time)\n```\n\nNotice how `compareDate` has all zero's for time. The difference in time is the reason why this comparison fails. To fix this, we need to create the current day without time. We do this by instantiating a new JS Date object by individually passing in the year, month and day.\n\n```js\nconst todayWithoutTime = new Date(\n  new Date().getFullYear(),\n  new Date().getMonth(),\n  new Date().getDate()\n);\nconsole.log(\"todayWithoutTime: \", todayWithoutTime);\n// todayWithoutTime:  Tue Jan 28 2020 00:00:00 GMT-0500 (Eastern Standard Time)\n```\n\nSo let's try our comparison again.\n\n```js\nconst compareDate = new Date(\"01/28/2020\");\nconst todayWithoutTime = new Date(\n  new Date().getFullYear(),\n  new Date().getMonth(),\n  new Date().getDate()\n);\nconsole.log(compareDate >= todayWithoutTime);\n// true\n```\n\nThat's it. Just remember that when comparing dates in JavaScript it is vital to factor in the time. 😎\n"},{"slug":"installing-go-on-a-mac","category":"blog","title":"Installing Go on a Mac","description":"In this article, I am going to show you how to install & setup Go (Golang) on Mac and also setup/configure VS Code for writing Go (Golang) code.","tags":["go"],"body":"\nIn this article, I am going to show you how to install & setup Go on Mac and also setup/configure VS Code for writing Go code.\n\n## Install\n\nThe easiest way to install go is via go's website [Golang.org](https://golang.org/dl). After going to this page, click on the link for 'Apple macOS' and run the installer.\n\nIf you have [Homebrew](https://brew.sh/) installed you can run the command `brew install golang`\n\nAfter you have installed, let's verify and test that everything is working.\n\nRun this command in your terminal:\n\n```bash\ngo version\n\n# You should see an output similar to the following:\n# go version go1.13.7 darwin/amd64\n```\n\n## Workspace Setup\n\nGo has this concept of a 'workspace,' which is where all of your source code and 3rd party packages, binaries etc. are all stored. On a mac this location is under:\n\n```bash\n/Users/<your mac username>/go\n\n# mine is: /Users/rguss/go/src\n```\n\nThis location is also known as your `GOPATH`. The location of this path and various other Go specific ENV Variables can be located with the command:\n\n```bash\ngo env\n```\n\nYou will also need to create 3 directories inside of your `$GOPATH` with the following:\n\n```bash\nmkdir -p $GOPATH $GOPATH/src $GOPATH/pkg $GOPATH/bin\n```\n\n## Hello World\n\nLet's create a simple hello world program and build it to make sure we have everything configured correctly.\n\nInside of your `$GOPATH/src` directory create a directory called `hello` and then a file called `hello.go` inside of it.\n\nIt should look like this `$GOPATH/src/hello/hello.go`\n\nThen paste the following into `hello.go`:\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Printf(\"Hello, World!\")\n}\n```\n\nThen build it with the go tool:\n\n```bash\ncd $HOME/go/src/hello\ngo build\n```\n\nThen:\n\n```bash\n./hello\n\n# Output should be:\n# Hello, World!\n```\n\nIf you see `Hello, World!` output to the console, you are all set!\n\n## VS Code\n\nThe final step is to set up and configure [VS Code](https://code.visualstudio.com/) to write Go code. It is as simple as\ninstalling a single extension called [Go](https://marketplace.visualstudio.com/items?itemName=ms-vscode.Go). Once installed, you are all set and ready to start writing Go.\n\n## Additional Resources\n\n- [Golang.org](https://golang.org/)\n- [Go.dev](https://go.dev/)\n"},{"slug":"introducing-astro","category":"blog","title":"Introducing Astro: Ship Less JavaScript","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\nThere's a simple secret to building a faster website — _just ship less_.\n\nUnfortunately, modern web development has been trending in the opposite direction—towards _more._ More JavaScript, more features, more moving parts, and ultimately more complexity needed to keep it all running smoothly.\n\nToday I'm excited to publicly share Astro: a new kind of static site builder that delivers lightning-fast performance with a modern developer experience. To design Astro, we borrowed the best parts of our favorite tools and then added a few innovations of our own, including:\n\n- **Bring Your Own Framework (BYOF):** Build your site using React, Svelte, Vue, Preact, web components, or just plain ol' HTML + JavaScript.\n- **100% Static HTML, No JS:** Astro renders your entire page to static HTML, removing all JavaScript from your final build by default.\n- **On-Demand Components:** Need some JS? Astro can automatically hydrate interactive components when they become visible on the page. If the user never sees it, they never load it.\n- **Fully-Featured:** Astro supports TypeScript, Scoped CSS, CSS Modules, Sass, Tailwind, Markdown, MDX, and any of your favorite npm packages.\n- **SEO Enabled:** Automatic sitemaps, RSS feeds, pagination and collections take the pain out of SEO and syndication.\n\nThis post marks the first public beta release of Astro. **Missing features and bugs are still to be expected at this early stage.** There are still some months to go before an official 1.0 release, but there are already several fast sites built with Astro in production today. We would love your early feedback as we move towards a v1.0 release later this year.\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides).\n\n## Getting Started\n\nStarting a new project in Astro is easy:\n\n```shell\n# create your project\nmkdir new-project-directory\ncd new-project-directory\nnpm init astro\n\n# install your dependencies\nnpm install\n\n# start the dev server and open your browser\nnpm run dev\n```\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides).\n\n## How Astro Works\n\nAstro works a lot like a static site generator. If you have ever used Eleventy, Hugo, or Jekyll (or even a server-side web framework like Rails, Laravel, or Django) then you should feel right at home with Astro.\n\nIn Astro, you compose your website using UI components from your favorite JavaScript web framework (React, Svelte, Vue, etc). Astro renders your entire site to static HTML during the build. The result is a fully static website with all JavaScript removed from the final page. No monolithic JavaScript application required, just static HTML that loads as fast as possible in the browser regardless of how many UI components you used to generate it.\n\nOf course, sometimes client-side JavaScript is inevitable. Image carousels, shopping carts, and auto-complete search bars are just a few examples of things that require some JavaScript to run in the browser. This is where Astro really shines: When a component needs some JavaScript, Astro only loads that one component (and any dependencies). The rest of your site continues to exist as static, lightweight HTML.\n\nIn other full-stack web frameworks this level of per-component optimization would be impossible without loading the entire page in JavaScript, delaying interactivity. In Astro, this kind of [partial hydration](https://addyosmani.com/blog/rehydration/) is built into the tool itself.\n\nYou can even [automatically defer components](https://codepen.io/jonneal/full/ZELvMvw) to only load once they become visible on the page with the `client:visible` directive.\n\nThis new approach to web architecture is called [islands architecture](https://jasonformat.com/islands-architecture/). We didn't coin the term, but Astro may have perfected the technique. We are confident that an HTML-first, JavaScript-only-as-needed approach is the best solution for the majority of content-based websites.\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides)\n\n## Embracing the Pit of Success\n\n> A well-designed system makes it easy to do the right things and annoying (but not impossible) to do the wrong things<div class=\"source\"><p>– Jeff Atwood</p>[Falling Into The Pit of Success](https://blog.codinghorror.com/falling-into-the-pit-of-success/)</div>\n\nPoor performance is often framed as a failure of the developer, but we respectfully disagree. In many cases, poor performance is a failure of tooling. It should be difficult to build a slow website.\n\nAstro's main design principle is to lead developers into what [Rico Mariani](https://twitter.com/ricomariani) dubbed \"the pit of success\". It is our goal to build every site \"fast by default\" while also delivering a familiar, modern developer experience.\n\nBy building your site to static HTML by default, Astro makes it difficult (but never impossible 😉) to build a slow site.\n\n## Long-Term Sustainability\n\nAstro is built by the team of open source developers behind [Snowpack](https://snowpack.dev) and [Skypack](https://skypack.dev), with additional contributions from the community.\n\n**Astro is and always will be free.** It is an open source project released under the [MIT license](https://github.com/snowpackjs/astro/blob/main/LICENSE).\n\nWe care deeply about building a more sustainable future for open source software. At the same time, we need to support Astro's development long-term. This requires money (donations alone aren't enough.)\n\nWe're inspired by the early success of projects like [Tailwind](https://tailwindcss.com/), [Rome](https://rome.tools/), [Remix](https://remix.run/), [Ionic](https://ionicframework.com/), and others who are experimenting with long-term financial sustainability on top of Open Source. Over the next year we'll be exploring how we can create a sustainable business to support a 100% free, open source Astro for years to come.\n\nIf your company is as excited about Astro as we are, [we'd love to hear from you.](https://astro.build/chat)\n\nFinally, I'd like to give a **HUGE** thanks to the 300+ developers who joined our earliest private beta. Your feedback has been essential in shaping Astro into the tool it is today. If you're interested in getting involved (or just following along with development) please [join us on Discord.](https://astro.build/chat)\n\n> To learn more about Astro and start building your first site, check out [the project README.](https://github.com/snowpackjs/astro#-guides)\n"},{"slug":"华山","category":"blog","title":"华山论剑看世间","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/bb/12121221mmm.jpg\" width=900/>\n\n<small>封面图摄于华山山顶，超险的一座大山，好些坡度将近 80 度，爬了一天到达山顶景色很壮阔，西安除了吃外值得一去的地方</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注可以及时收到更新~**\n\n## 好文和学习\n\n**企业级数据可视化应用有哪些机遇与挑战？**  \n<https://mp.weixin.qq.com/s/vvKPJZCZNs8VfM8A07x5SA>  \n蚂蚁@御术在外滩大会关于企业级可视化的分享文字版，从为什么需要、当前挑战和问题和未来趋势来阐述，很适合前端同学一读\n\n**CodeSandbox 是如何让 npm 上的模块直接在浏览器端运行的**  \n<https://www.yuque.com/wangxiangzhong/aob8up/uf99c5>  \nHow we make npm packages work in the browser 的一篇翻译[文章](<](https://hackernoon.com/how-we-make-npm-packages-work-in-the-browser-announcing-the-new-packager-6ce16aa4cee6)>)，译者加入了自己的理解，利用这个思路其实对于一些线上开发的场景可以做不少事情\n\n**What the fuck JavaScrip t 中文版?**  \n<https://github.com/denysdovhan/wtfjs/blob/master/README-zh-cn.md>  \n哈哈哈哈，原来 `\"b\" + \"a\" + +\"a\" + \"a\" = \"baNaNa\"`，还有`[1, 2, 3] + [4, 5, 6]; // -> '1,2,34,5,6'`，你知道是为啥吗？还是不要写这样的代码\n\n**我可能连 GitHub 搜索都不会用**  \n<https://juejin.im/post/6891056415440535565>  \n原来 Github 上面搜索还有这么多神仙技巧...不过我还是觉得简单的才是比较好记住的\n\n## 开源和工具\n\n**Nat - 可以替换你 ls 命令的工具**  \n<https://github.com/willdoescode/nat>  \n比原有 ls 的展示效果要丰富漂亮不少，安装后我已经替换了原有 ls，执行`cargo install natls`，然后`code .zshrc`加上`alias ls='natls'`就好了\n<img src=\"https://gw.alipayobjects.com/zos/k/1q/8TKnYM.jpg\" width=\"800\" />\n\n**Tesseract.js - 支持 100 多种语言的纯 JS OCR**  \n<https://github.com/naptha/tesseract.js>  \n对应前端想识别图片中的文字可以用这个库来做，不过我一直用[Bob](https://ripperhe.gitee.io/bob/#/)这个 Mac 开源软件来做识别和翻译工具\n\n**Denoify-让 NPM 模块支持 Deno 且不需单独维护**  \n<https://github.com/garronej/denoify>  \n一个将 NPM 模块构建 Deno 模块的包，结合着 Github Action 其实就能做到无需手动去维护了，官方是这样介绍的 `For NPM module authors that would like to support Deno but do not want to write and maintain a port for it`\n\n**CSS Spider-一个抄网页 CSS 实现的 Chrome 扩展**  \n<https://cssspider.fresalabs.com/home>  \n试用了下效果还不错，开启后，鼠标放到元素上，对应的样式就出来了，可快速 Copy 使用\n\n**Gitify-一个 github 消息通知的菜单栏工具**  \n<https://github.com/manosim/gitify>  \n用 Electron 实现的一个支持多端的实时通知软件，比较适合开源软件的维护同学\n\n**Asciinema - 方便录制命令行会话过程并通过链接分享**  \n<https://asciinema.org/>  \n平时我们分享一个命令行的使用，一般是录制视频然后 mp4 文件方式分享给他人，这个工具可支持直接录制生成对应 url 给到他人同时支持所有人可见\n\n## 跨端和 iOS\n\n**把闲鱼 APP 长列表流畅度翻了倍**  \n<https://mp.weixin.qq.com/s/dlOQ3Hw_U3CFQM91vcTGWQ>  \n咸鱼关于 Android 原生、flutter 页面的长列表优化经验分享，一个良心教程\n\n**网易云音乐 iOS 14 小组件实战手册**  \n<https://mp.weixin.qq.com/s/gFd8fkJBkQd5RpFSD0P8Ig>  \n国内终于有厂商在慢慢跟进这个功能了，来看看网易音乐是怎么做的\n\n**抖音品质建设 - iOS 启动优化**  \n<https://mp.weixin.qq.com/s/3-Sbqe9gxdV6eI1f435BDg>  \n一个 App 的启动速度给用户的印象很重要，也是让用户喜欢用的的一个因素，抖音 iOS 的启动优化从此文看做了不少事情也说明了原理所在\n\n**Flutter 之全埋点思考与实现**  \n<https://juejin.im/post/6892371163859976199>  \n埋点对于阿里前端的同学应该再熟悉不过了，不过假如我问你 Flutter 埋点的原理你知道吗？\n\n**QQ 音乐 Android 编译提速之路**  \n<https://juejin.im/post/6891957803813584909>  \n一直觉得 QQ 音乐整体 App 做的不错，借此文来学习一波 QQ 音乐团队在增量编译组件研发上的探索与实践\n\n## 灵感和有趣\n\n**语雀产品经理的成长之路**  \n<https://www.yuque.com/fangqiao/oe8iog/vk6m19>  \n为什么感觉语雀的产品越做越好，同时有一条主线执行下去呢？因为它的产品经理几年都没有换过\n\n**视觉设计中发现的 11 种视错觉**  \n<https://mp.weixin.qq.com/s/zGdXBq4RDLaPYduEHJiHFg>  \n日常中大家都可能会碰到一些神奇的场景，让人产生视觉错觉，本文来告诉你原因所在\n\n**Notion 的思想来源和投资人**  \n<https://mp.weixin.qq.com/s/eatQQa-ArDI96wROtX66dQ>  \n好吧这个软件之前就被“吹”得很火，我也反复几个月内至少试用过三次还是觉得有些复杂最后给放弃了，不过还是有很多人用上后就特别喜欢了\n"},{"slug":"无忧孩童","category":"blog","title":"无忧孩童","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/vf/100.jpg\" width=900/>\n\n<small>在湖南的小路上看到一群小孩在无忧的玩，还有那种巨高兴在路上打滚的，很是快乐，潮流周刊也 100 期了，希望你也快乐～</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此专栏，方便获取更新通知**\n\n## 技术相关\n\n**WebRTC 技术介绍**  \n<https://juejin.cn/post/7151932832041058340>  \n文章讲了一些 WebRTC 基础知识，以及一些简单的 Demo，可以了解一下。\n\n**Recoil 状态管理方案的浅入浅出**  \n<https://mp.weixin.qq.com/s/hwTdALHFbMHPRzJEYqvaVA>  \nRecoil 是 Facebook 推出的一款专门针对 React 应用的状态管理库，在一定程度上代表了目前的一种发展趋势，在使用时觉得一些理念很先进，能极大地满足作为一个前端开发者的数据需求，本文对 Recoil 的这些特性做一个梳理。\n\n**Which is the fastest way to find if something exists in an Array in Javascript?**  \n<https://medium.com/@tiagobertolo/which-is-the-fastest-way-to-find-if-something-exists-in-an-array-in-javascript-49ab24051efb>  \n在 Javascript 中查找数组中是否存在某些内容的最快方法是什么？可以去看看说不定有时候优化的时候有用。\n\n**11 Amazing New JavaScript Features in ES13**  \n<https://javascript.plainenglish.io/es13-javascript-features-eed7ed2f1497>  \n最近这几年 ES 的发展速度确实比之前我们认识的 JS 快多了。\n\n## 潮流开源\n\n**Pake：很简单的用 Rust 来打包网页 Mac App**  \n<https://github.com/tw93/Pake>  \n周末将之前用 Rust 打包的那个微信读书 Mac App 给开源了，其实底层比较简单，直接使用的 Tauri，不过可以基于他去打包一些你常用的 App。  \n<img src=\"https://cdn.fliggy.com/upic/9Y3lrP.jpg\" width=\"800\"/>\n\n**duf：更好的 df 替换工具**  \n<https://github.com/muesli/duf>  \n一个关于磁盘使用率的命令行工具。  \n<img src=\"https://cdn.fliggy.com/upic/eR6Xnp.jpg\" width=\"800\"/>\n\n**Boring Avatars：不无聊的头像**  \n<https://boringavatars.com/>  \n<img src=\"https://cdn.fliggy.com/upic/E7x6G9.png\" width=\"800\"/>\n\n**Apple Design Resources**  \n<https://developer.apple.com/design/resources/>  \n原来可以直接去官网下载苹果的一些设计素材，很新新及时的感觉。  \n<img src=\"https://cdn.fliggy.com/upic/NdMpVh.png\" width=\"800\"/>\n\n**sharing：通过命令行的方式在 iOS 和 Android 设备间分享文件**  \n<https://github.com/parvardegr/sharing>  \n唯一的好处就是不需要下载 App 了，不过其实很好的方式可能是用通用社交 App 了。\n\n## 随便看看\n\n**写给所有 Mac 用户的摸鱼指北**  \n<https://sspai.com/post/75805>  \n这篇文章关于 Mac 的效率指南讲得还不错，很适合小白阅读。\n\n**择时无用？这可能 A 股最大的谎言**  \n<https://www.huxiu.com/article/687436.html>  \n作者认为，想要在 A 股获得超额收益，不仅仅是散户，即使是对于机构资金，择时策略也是有效方法之一。\n\n**为什么毫米波雷达无法识别静态物体？**  \n<https://www.zhihu.com/question/308426613>  \n理论上相对位置发生变化应该是可以识别出来才对，问题主要是针对车用的毫米波雷达，从提问者了解的情况来看，目前的自动驾驶半自动驾驶系统对静态物体的识别能力都比较差。\n\n**手机厂商要“消灭 SIM 卡”？**  \n<https://finance.sina.com.cn/jjxw/2022-09-29/doc-imqqsmrp0933136.shtml>  \n苹果公司新一代 iPhone 手机发布以后，其采用的两项技术引发了公众关注：一项是卫星通讯技术，另一项是美版 iPhone 14 不再需要 SIM 卡，改用 eSIM 替代。不过遗憾的是中国享受不到这个技术。\n\n**10 Little macOS Apps that Make a Big Difference in 2022**  \n<https://medium.com/@aplaceofmind/10-little-macos-apps-that-make-a-big-difference-in-2022-part-1-c6428f92a079>  \n作者推荐了 10 个 Mac 上的小软件，有兴趣可以试试。\n"},{"slug":"日本大阪海游馆","category":"blog","title":"日本大阪海游馆","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/1i/nn4eEv.jpg\" width=\"800\" />\n\n<small>封面图日本大阪海游馆，拥有超极大[鲸鲨](https://gw.alipayobjects.com/os/k/oh/1213213123iii.mp4)而著名，海洋生物种类比想象多很多，等明年国外疫情结束，假如到大阪旅游除去环球影城最推荐这个</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注此专栏可以及时收到更新~**\n\n## 好文和学习\n\n**我的前端成长之路：内观自在，外观世音，追寻内心平静**  \n<https://mp.weixin.qq.com/s/yjAzgpBpLUrAKgIZd__sNg>  \n来自飞猪前端圣司的一篇关于自我成长的总结文章，校招毕业 4 年时间从 P5 到 P8，内观自在，外观世音，推荐前端同学一读\n\n**对开发人员有用的定律、理论、原则和模式**  \n<https://github.com/nusr/hacker-laws-zh>  \n值得收藏和多次阅读的程序员定律，里面收集很多抽象经验的解释，比如说「过早优化是万恶之源」、「九个女人不能在一个月内生一个孩子 」\n\n**解释 JavaScript 的内存管理**  \n<https://felixgerschau.com/javascript-memory-management>  \n我们平时写代码的时候几乎不太考虑 JS 的内存管理，因为浏览器已经帮忙做了，但是有时候假如碰到内存泄露，那懂一些原理会有便于你排查问题\n\n**聊一聊二维码扫描登录原理**  \n<https://juejin.im/post/6844904111398191117>  \n可先想后看，假如让你实现一个二维码扫码登录的功能你会怎么做？\n\n**为什么 IPv6 难以取代 IPv4**  \n<https://draveness.me/whys-the-design-ipv6-replacing-ipv4/>  \n西电学弟的文章，从网络原理角度来解释为什么 IPv6 难以取代 IPv4，整体博客质量超级高，值得关注\n\n**使用 Emoji 来创建 CSS Shapes**  \n<https://css-tricks.com/creating-css-shapes-with-emoji/>  \n思路还不错，文章通过不少 Demo 来讲述将 Emoji 图标的形状样子内联到文字环绕的效果\n\n## 开源和工具\n\n**Gazepass - 无密码的登录 API**  \n<https://gazepass.com/>  \n上周周刊中[《Meet Face ID and Touch ID for the Web》](https://webkit.org/blog/11312/meet-face-id-and-touch-id-for-the-web/)，刚想去折腾一下，就有人给产品化出来了，效果实现很赞，说不定不久将来在 Web 中输入框密码类型就变成可选状态了\n<img src=\"https://cdn.fliggy.com/upic/WZe3kK.gif\" width=\"800\" />\n\n**RSSHub - 万物皆可 RSS**  \n<https://github.com/DIYgod/RSSHub>  \n对于有 RSS 阅读习惯的同学不要错过这个工具，一个很简单易用、易于扩展的 RSS 生成器，借此可以给平时不支持 RSS 的内容网站生成 RSS 订阅源\n\n**iOS 上的 Linux Shell 工具**  \n<https://github.com/ish-app/ish/>  \niOS 上的命令行工具，想想可以用它来玩什么？\n\n**使用 TensorFlow.js 进行 NSFW 检测**  \n<https://github.com/infinitered/nsfwjs>  \nNSFW 指 Not Safe For Work ，这个库叫 nsfwjs，通过 TensorFlow.js 在浏览器快速识别有点点那个啥的图像，别多想，还是去看看如何实现的~\n\n**Eta - 又来了一个新的模版引擎**  \n<https://eta.js.org/>  \n其实 tpl 挺好用的，就是感觉有些上古时代的产物了，Eta 相比就潮流一些了，可以同时在 Node、Deno 和浏览器中使用，性能好、轻量、配置性更强一些\n\n**使用 GitHub Actions 等生成你的跑步主页**  \n<https://github.com/yihong0618/running_page>  \n思路很不错，借助 GitHub Actions、Gatsby、Vercel 自动部署、Mapbox 地图等能力可以将你的平时的跑步记录(Keep、Nike、Garmin 等)生成一个自动更新的个人跑步主页\n\n## iOS 和多端\n\n**Native 地图与 Web 融合技术的应用与实践**  \n<https://mp.weixin.qq.com/s/RKGJOtRMjTetTZRIGzqH_Q>  \n同层渲染是移动端 H5 中近年的一种性能体验“黑科技”优化技术，也即将 WebView 与 Native 组件叠加到一起共处一个页面，如打车的地图用 Native 的，操作部分用 H5 来实现，美团的解决方案可供输入\n\n**自研 iOS 热更新机制——OCPack 技术方案总结**  \n<https://juejin.im/post/6884833291740905480>  \n讲了一个 iOS 客户端动态化技术方案，不过更多是看看思路以及热更新实现的一些原理，这东西由于 iOS 审核的原因比较难大规模使用\n\n**iOS 性能优化实践：头条抖音如何实现 OOM 崩溃率下降 50%+**  \n<https://mp.weixin.qq.com/s/4-4M9E8NziAgshlwB7Sc6g>  \nOOM (Out Of Memory)指的是在 iOS 设备上当前应用因为内存占用过高而被操作系统强制终止，在用户侧的感知就是 App 一瞬间的闪退，Crash 对于客户端同学很好理解但是对于前端却很头疼，来看看头条的解决思路是怎么样的？\n\n**如何进行 iOS Widget 开发？**  \n<https://mp.weixin.qq.com/s/xXEWWHXt4oKDSboogTbTZA>  \n盒马同学基于盒马小镇的 Widget 开发，分享在登录授权、数据更新、界面渲染以及审核上的实践经验\n\n## 灵感和有趣\n\n**产品经理如何做产品架构设计**  \n<http://www.woshipm.com/pd/4231285.html>  \n对于产品经理来说，发展到一定阶段后，日常的工作内容往往离不开产品架构设计。这是一个极其细致的活，需要产品经理有很强的架构能力。那么产品经理如何才能摸清产品的底层逻辑、提升对产品的认知，做好产品架构呢？\n\n**到底几点睡觉才算是不叫熬夜？**  \n<https://daily.zhihu.com/story/9729486>  \n最好还是别熬夜，不如今天就早点睡吧\n\n**人口普查究竟查什么？**  \n<https://mp.weixin.qq.com/s/Hc6TR83XRpwxW_g3vIdZXw>  \n回形针近期的一篇科普文，在中国人口普查是如何进行的？前几次的普查究竟查到了什么？\n\n**如何有效地进行代码 Review？**  \n<https://mp.weixin.qq.com/s/uFivYfX53s5zAe6hacznlg>  \n腾讯技术同学关于为什么要做以及如何高效做 Code Review 的一篇文章\n\n**一个纯 CSS 游戏 - You Must Build a Lighthouse.**  \n<https://codepen.io/ivorjetski/pen/OJXbvdL>  \n游戏动效做的很不错，可以重点学习作者一些效果是如何借助 CSS 实现的\n"},{"slug":"日积月累滴水穿石","category":"blog","title":"日积月累滴水穿石","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<audio controls>\n       <source src=\"/audio/amazing test.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n\n<br />\n<br />\n<br />\n\n在这个 AI 时代，越来越多的工具将人工智能融入到其平台中，为我们提供了无限的可能性。让我们一起探索一些令人振奋的工具，它们可以帮助我们完成各种任务，从设计和内容创作到项目管理和数据分析。这些工具充满了 AI 的魔力，为我们节省了时间和精力，让我们可以专注于更重要的事情。\n\n1. Canva\n\n以前，我用 Canva 完成了一系列的任务，如创建社交媒体帖子、发票、简历、网站、演示文稿、视频、徽标等等。然而，随着 AI 技术的出现，Canva 通过将几个 AI 功能集成到其平台上，取得了重大进步。\n\n让我分享一些 Canva 提供的显著 AI 特性：\n\n- Canva Doc 中的魔法写作：这个特性使用户能够轻松生成书面内容。它能够快速简单地帮助组织各种目的的文本。\n\n- 魔法设计：通过这个功能，用户可以亲眼目睹 AI 的魔力。只需提供一个提示或想法，Canva 的 AI 算法就能为你生成令人眼花缭乱的设计，让你无需大费周章地创造视觉吸引力的设计。\n\n- 魔法橡皮擦：厌倦了图片上的多余元素吗？这个 AI 功能就在这里帮助你。只需点击几下，你就能神奇地从你的图像中删除任何不需要的元素，确保图像干净整洁。\n\n- 魔法编辑：需要在你的设计中添加或修改元素吗？这个功能让你能够轻松实现。无论你是想添加新的元素，还是调整现有的元素，Canva 的 AI 功能都能简化这个过程。\n\n这只是 Canva 提供的 AI 功能的一部分例子。通过利用这些尖端技术，我能在几分钟内完成设计工作，节省了时间和精力。\n\n2. ChatGPT\n\n作为一个独立创业者，我每天都有很多任务要处理。最近，我甚至接受了学习如何市场化产品和吸引投资者的挑战。上周，我完全自己创建了一个投资者介绍。这就是 ChatGPT 派上用场的地方。\n\n我用 ChatGPT 最有效的提示之一是：“我希望你扮演一个有着几十年[职业名称]经验的世界级专家。我会向你要求输出，你必须给我独特的、专业写作的作品。”\n\n通过使用这个提示，ChatGPT 扮演了一个有经验的导师的角色，随时为我提供任何我询问的主题的有价值的见解。\n\n例如，当我使用这个提示时，我会得到超出我预期的优秀回答。你可以根据你的专业定制提示，并询问 ChatGPT 任何你想知道的事情。\n\nChatGPT 真的就像我可以随时寻求指导和专业知识的专家顾问，成为了我日常生活中的一个宝贵工具。\n"},{"slug":"白云滑雪场","category":"blog","title":"白云滑雪场","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<img src=\"https://gw.alipayobjects.com/zos/k/o3/ZebwPr.jpg\" width=\"800\" />\n\n<small>封面图摄于某年冬天新疆的白云滑雪场，从高处滑下来很是[刺激](https://gw.alipayobjects.com/os/k/nd/dsajdasdsad.mp4)，秋冬有很多平时见不到的非内陆美景，可以一去~</small>\n\n> **记录每周看到的前端潮流技术，筛选后用接地气方式发布于此，关注此专栏可以及时收到更新~**\n\n## 好文和学习\n\n**Webpack 5 终于发布啦**  \n<https://webpack.js.org/blog/2020-10-10-webpack-5-release/>  \n阔别两年，webpack 5 终于正式发布了，可通过此文来了解下重要更新有哪一些，以及其构建效率和质量是怎么去提升的，中文可见[详细内容>>](https://juejin.im/post/6882663278712094727)\n\n**ECMAScript 2020 新增特性**  \n<https://juejin.im/post/6883306672064987149>  \nECMAScript 2020 是 ECMAScript 语言规范的第 11 版，新增的这 9 个新特性值得一学\n\n**Serverless 未来十年发展解读**  \n<https://juejin.im/post/6883773727733972999>  \n本文整理自 Johann Schleier-Smith 在 [ServerlessDays China](https://cloud.tencent.com/developer/salon/live-1224/agenda-10025) 的演讲，主要分为四个部分：首先阐述 UC Berkeley 怎样来定义 Serverless ，之后会分享一些近期的研究成果和进展，最后提出对云计算未来的一些预测和设想\n\n**浏览器是如何工作的**  \n<https://king-hcj.github.io/2020/10/05/google-v8/>  \n一篇文章方方面面的介绍到了 Chrome V8，让你更懂 JavaScript 运行，很是详细\n\n**超全的 Linux Shell 文本处理工具集锦**  \n<https://segmentfault.com/a/1190000037480939>  \n每周学一点新知识，用过 Shell 处理一些文本才知道原来这么简单方便，此文将一些处理文本常见的工具都介绍了一个遍，可先了解到用的时候再查\n\n**一文了解文件上传全过程**  \n<https://segmentfault.com/a/1190000037411957>  \n一篇详细的介绍文件上传流程的文章，从前置知识、请求端、服务端、接收端一层一层来带着入学的感觉\n\n## 开源和工具\n\n**Zipson - Json 压缩工具**  \n<https://github.com/jgranstrom/zipson>  \nZipson 是一个让原本 `JSON.parse/stringify` 增加了压缩和流媒体支持的临时替代方案，感觉前后端传输中，接口先压缩吐出数据，前端通过解压获取 Json，可让传输数据变小 50%\n\n**Bubble Tea：一个强大轻量的 TUI 框架**  \n<https://github.com/charmbracelet/bubbletea>  \nBubble Tea 一个基于 Elm 架构的 Go 框架，借此可用有趣、函数式、带状态的方式去编写命令行 APP，效果很不错，虽然是 GO 语言，不过可触类旁通研究一波\n<img src=\"https://gw.alipayobjects.com/zos/k/1v/12123213123.gif\" width=\"800\" />\n\n**BlurHash: 图片懒加载舒服的占位符**  \n<https://github.com/woltapp/blurhash>  \n之前我们一般使用纯灰色亦或是骨架占位符的方式来缓存暂未出来的图片，虽然看起来没问题但是不讨设计喜欢，BlurHash 是将原有会会的占位图，变成模糊漂亮的彩色，可能设计会喜欢\n\n**Drogon：一个基于 C++14/17 的 Http 应用框架**  \n<https://github.com/an-tao/drogon>  \nDrogon 是一个基于 C++14/17 的 Http 应用框架，通可以方便的使用 C++构建各种类型的 Web 应用服务端程序，写习惯 Node 的同学看看这个会让你惊讶的\n\n**detect-gpu:一个 GPU 的检测库**  \n<https://github.com/TimvanScherpenzeel/detect-gpu>  \n根据 GPU 的 3D 渲染基准分数对 GPU 进行分类，开发人员可借此结果为图形密集型应用程序提供合理的默认设置\n\n**Plausible Analytics：Google Analytics 替代品**  \n<https://github.com/plausible/analytics>  \nPlausible Analytics 是一个简单、轻量且隐私友好的 Google Analytics 替代品，不使用 cookie，自托管或者云上部署都可以\n\n**Awesome YouTubers**  \n<https://github.com/JoseDeFreitas/awesome-youtubers>  \n以上这个 Awesome YouTubers 将技术领域值得关注的 YouTuber 给挑选出来了，适合那种看视频学习的同学来有选择关注~\n\n## iOS 和多端\n\n**1 分钟将 vscode 撸成小霸王**  \n<https://juejin.im/post/6882576431503638536>  \n这个是真的“浪”，借助[JSNES](https://github.com/bfirsh/jsnes)模拟器弄了一个 VSCode 的小霸王游戏机，VScode 插件搜索「小霸王」即可使用，这个想法很是不错~\n\n**iOS 后台锁屏监听摇一摇**  \n<https://juejin.im/post/6881420727371694093>  \n不会吧这也行系列，一般情况下出于省电、权限、合理性等因素考虑一些奇怪的需求 iOS 不是很好实现，如当 APP 处于后台或锁屏状态时，依旧可以监听到摇一摇，看看这里是怎么做的\n\n**Flutter 1.22 正式发布**  \n<https://juejin.im/post/6879048672597213198>  \n来看一看 Flutter 1.22 趁着 iOS 14/Android 11 发布季，都更新了一些什么样的功能？\n\n## 灵感和设计\n\n**哪些工具使你成为一个更好的程序员？**  \n<https://news.ycombinator.com/item?id=23468193>  \nHacker News 上面比较热烈的一个讨论，看看国外的程序员怎么说？\n\n**很炫酷的 3D 可视化的星空**  \n<http://stars.chromeexperiments.com/>  \n一个可交互式的三维可视化恒星邻居，包括超过 10 万颗附近的恒星，点击 URL 进入很是不错\n\n**Blush:插图定制生成工具**  \n<https://blush.design/zh-CN>  \n这个工具不错的是可以自定义插图的每一部分来创建自己的构图，同时种类也很多，对于前端同学写一些图文搭配 PPT 蛮适合\n\n**2020 中国奢侈品消费者数字行为洞察报告**  \n<https://mp.weixin.qq.com/s/fsBblPTiTjYXg1vUKzK_Jw>  \n从此文来了解下后疫情时代中国奢侈品消费市场呈现的趋势、消费链路以及品牌打法，还可结合“名媛拼团”侧面来剖析下\n\n**用纯 CSS 画了一个棕色美女**  \n<https://diana-adrianne.com/purecss-character/>  \n头发、眼睛、鼻子和皮肤阴影画的很逼真，可以打开开发者调试看里面 CSS 是怎么写的\n"},{"slug":"逍遥自在行动","category":"blog","title":"逍遥自在行动","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\ndate: 2023/06/05\n\n<small>封面来源于最近去良渚公园找一个草地铺张毯子吹风睡觉时候拍到的一棵树，很有感觉，本来想着将人给 P 掉的，不过想了想，有人反而更好，不是那种看着像壁纸一样的千篇一律反而不好看了，这样的图我觉得比壁纸高级不少。</small>\n\n> **记录每周看到的接地气的前端潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知**\n\n## 潮流工具\n\n<audio controls>\n       <source src=\"/audiotest.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n</audio>\n"},{"slug":"马来西亚 Api","category":"blog","title":"马来西亚 Api","description":"We're excited to announce Astro as a new way to build static websites and deliver lightning-fast performance without sacrificing a modern developer experience.","tags":["astro"],"body":"\n<audio controls>\n       <source src=\"/audio/audiotest.mp3\" type=\"audio/mpeg\">\n  \tYour browser does not support the audio element.\n  </audio>\n\n<br />  \n<br />  \n<br />\n\n在这个 AI 时代，越来越多的工具将人工智能融入到其平台中，为我们提供了无限的可能性。让我们一起探索一些令人振奋的工具，它们可以帮助我们完成各种任务，从设计和内容创作到项目管理和数据分析。这些工具充满了 AI 的魔力，为我们节省了时间和精力，让我们可以专注于更重要的事情。\n\n1. Canva\n\n以前，我用 Canva 完成了一系列的任务，如创建社交媒体帖子、发票、简历、网站、演示文稿、视频、徽标等等。然而，随着 AI 技术的出现，Canva 通过将几个 AI 功能集成到其平台上，取得了重大进步。\n\n让我分享一些 Canva 提供的显著 AI 特性：\n\n- Canva Doc 中的魔法写作：这个特性使用户能够轻松生成书面内容。它能够快速简单地帮助组织各种目的的文本。\n\n- 魔法设计：通过这个功能，用户可以亲眼目睹 AI 的魔力。只需提供一个提示或想法，Canva 的 AI 算法就能为你生成令人眼花缭乱的设计，让你无需大费周章地创造视觉吸引力的设计。\n\n- 魔法橡皮擦：厌倦了图片上的多余元素吗？这个 AI 功能就在这里帮助你。只需点击几下，你就能神奇地从你的图像中删除任何不需要的元素，确保图像干净整洁。\n\n- 魔法编辑：需要在你的设计中添加或修改元素吗？这个功能让你能够轻松实现。无论你是想添加新的元素，还是调整现有的元素，Canva 的 AI 功能都能简化这个过程。\n\n这只是 Canva 提供的 AI 功能的一部分例子。通过利用这些尖端技术，我能在几分钟内完成设计工作，节省了时间和精力。\n\n2. ChatGPT\n\n作为一个独立创业者，我每天都有很多任务要处理。最近，我甚至接受了学习如何市场化产品和吸引投资者的挑战。上周，我完全自己创建了一个投资者介绍。这就是 ChatGPT 派上用场的地方。\n\n我用 ChatGPT 最有效的提示之一是：“我希望你扮演一个有着几十年[职业名称]经验的世界级专家。我会向你要求输出，你必须给我独特的、专业写作的作品。”\n\n通过使用这个提示，ChatGPT 扮演了一个有经验的导师的角色，随时为我提供任何我询问的主题的有价值的见解。\n\n例如，当我使用这个提示时，我会得到超出我预期的优秀回答。你可以根据你的专业定制提示，并询问 ChatGPT 任何你想知道的事情。\n\nChatGPT 真的就像我可以随时寻求指导和专业知识的专家顾问，成为了我日常生活中的一个宝贵工具。\n"}]